{
  "address": "0x4bda02fE012BaFEf4cfD5d3d8568dE85995bED3E",
  "abi": [
    {
      "inputs": [],
      "name": "ControllerAlreadyInitializedError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ControllerInvalidIncentivizationFeeError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ControllerInvalidLiquidationFeeError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ControllerInvalidMinFundingFeeError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ControllerInvalidProtocolFeeError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ControllerNoZeroCoordinatorError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ControllerNotAllowedError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "controllerId",
          "type": "uint256"
        }
      ],
      "name": "ControllerNotOwnerError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "coordinatorId",
          "type": "uint256"
        }
      ],
      "name": "ControllerNotPauserError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "controllerId",
          "type": "uint256"
        }
      ],
      "name": "ControllerNotPendingOwnerError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "version",
          "type": "uint256"
        }
      ],
      "name": "UInitializableAlreadyInitializedError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UInitializableNotInitializingError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UInitializableZeroVersionError",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "coordinatorId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        }
      ],
      "name": "AllowedUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract ICollateral",
          "name": "newCollateral",
          "type": "address"
        }
      ],
      "name": "CollateralUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "coordinatorId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "CoordinatorCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "coordinatorId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "CoordinatorOwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "coordinatorId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "paused",
          "type": "bool"
        }
      ],
      "name": "CoordinatorPausedUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "coordinatorId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pauser",
          "type": "address"
        }
      ],
      "name": "CoordinatorPauserUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "coordinatorId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPendingOwner",
          "type": "address"
        }
      ],
      "name": "CoordinatorPendingOwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "coordinatorId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newTreasury",
          "type": "address"
        }
      ],
      "name": "CoordinatorTreasuryUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "UFixed18",
          "name": "newIncentivizationFee",
          "type": "uint256"
        }
      ],
      "name": "IncentivizationFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IIncentivizer",
          "name": "newIncentivizer",
          "type": "address"
        }
      ],
      "name": "IncentivizerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "UFixed18",
          "name": "newLiquidationFee",
          "type": "uint256"
        }
      ],
      "name": "LiquidationFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "UFixed18",
          "name": "newMinCollateral",
          "type": "uint256"
        }
      ],
      "name": "MinCollateralUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "UFixed18",
          "name": "newMinFundingFee",
          "type": "uint256"
        }
      ],
      "name": "MinFundingFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IBeacon",
          "name": "newProductBeacon",
          "type": "address"
        }
      ],
      "name": "ProductBeaconUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IProduct",
          "name": "product",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IProductProvider",
          "name": "provider",
          "type": "address"
        }
      ],
      "name": "ProductCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newProgramsPerProduct",
          "type": "uint256"
        }
      ],
      "name": "ProgramsPerProductUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "UFixed18",
          "name": "newProtocolFee",
          "type": "uint256"
        }
      ],
      "name": "ProtocolFeeUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "coordinatorId",
          "type": "uint256"
        }
      ],
      "name": "acceptCoordinatorOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collateral",
      "outputs": [
        {
          "internalType": "contract ICollateral",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IProduct",
          "name": "",
          "type": "address"
        }
      ],
      "name": "coordinatorFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "coordinatorId",
          "type": "uint256"
        }
      ],
      "name": "coordinators",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "pendingOwner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "treasury",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "pauser",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "paused",
              "type": "bool"
            }
          ],
          "internalType": "struct IController.Coordinator",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createCoordinator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "coordinatorId",
          "type": "uint256"
        },
        {
          "internalType": "contract IProductProvider",
          "name": "provider",
          "type": "address"
        }
      ],
      "name": "createProduct",
      "outputs": [
        {
          "internalType": "contract IProduct",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "incentivizationFee",
      "outputs": [
        {
          "internalType": "UFixed18",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "incentivizer",
      "outputs": [
        {
          "internalType": "contract IIncentivizer",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ICollateral",
          "name": "collateral_",
          "type": "address"
        },
        {
          "internalType": "contract IIncentivizer",
          "name": "incentivizer_",
          "type": "address"
        },
        {
          "internalType": "contract IBeacon",
          "name": "productBeacon_",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IProduct",
          "name": "product",
          "type": "address"
        }
      ],
      "name": "isProduct",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidationFee",
      "outputs": [
        {
          "internalType": "UFixed18",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minCollateral",
      "outputs": [
        {
          "internalType": "UFixed18",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minFundingFee",
      "outputs": [
        {
          "internalType": "UFixed18",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IProduct",
          "name": "product",
          "type": "address"
        }
      ],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "coordinatorId",
          "type": "uint256"
        }
      ],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "coordinatorId",
          "type": "uint256"
        }
      ],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IProduct",
          "name": "product",
          "type": "address"
        }
      ],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IProduct",
          "name": "product",
          "type": "address"
        }
      ],
      "name": "pauser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "coordinatorId",
          "type": "uint256"
        }
      ],
      "name": "pauser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "coordinatorId",
          "type": "uint256"
        }
      ],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "productBeacon",
      "outputs": [
        {
          "internalType": "contract IBeacon",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "programsPerProduct",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFee",
      "outputs": [
        {
          "internalType": "UFixed18",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IProduct",
          "name": "product",
          "type": "address"
        }
      ],
      "name": "treasury",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "coordinatorId",
          "type": "uint256"
        }
      ],
      "name": "treasury",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasury",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "coordinatorId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "newAllowed",
          "type": "bool"
        }
      ],
      "name": "updateAllowed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ICollateral",
          "name": "newCollateral",
          "type": "address"
        }
      ],
      "name": "updateCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "coordinatorId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "newPaused",
          "type": "bool"
        }
      ],
      "name": "updateCoordinatorPaused",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "coordinatorId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newPauser",
          "type": "address"
        }
      ],
      "name": "updateCoordinatorPauser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "coordinatorId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newPendingOwner",
          "type": "address"
        }
      ],
      "name": "updateCoordinatorPendingOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "coordinatorId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newTreasury",
          "type": "address"
        }
      ],
      "name": "updateCoordinatorTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "UFixed18",
          "name": "newIncentivizationFee",
          "type": "uint256"
        }
      ],
      "name": "updateIncentivizationFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IIncentivizer",
          "name": "newIncentivizer",
          "type": "address"
        }
      ],
      "name": "updateIncentivizer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "UFixed18",
          "name": "newLiquidationFee",
          "type": "uint256"
        }
      ],
      "name": "updateLiquidationFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "UFixed18",
          "name": "newMinCollateral",
          "type": "uint256"
        }
      ],
      "name": "updateMinCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "UFixed18",
          "name": "newMinFundingFee",
          "type": "uint256"
        }
      ],
      "name": "updateMinFundingFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IBeacon",
          "name": "newProductBeacon",
          "type": "address"
        }
      ],
      "name": "updateProductBeacon",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newProgramsPerProduct",
          "type": "uint256"
        }
      ],
      "name": "updateProgramsPerProduct",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "UFixed18",
          "name": "newProtocolFee",
          "type": "uint256"
        }
      ],
      "name": "updateProtocolFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xe2ed4f85c77b068af4d1a3dad8791ac7e45e0f09e268e522e95148a3e4494d79",
  "receipt": {
    "to": null,
    "from": "0xb779541EcE2bFFF7CB803cfcddfA220A753879b6",
    "contractAddress": "0x4bda02fE012BaFEf4cfD5d3d8568dE85995bED3E",
    "transactionIndex": 8,
    "gasUsed": "2082710",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xf5727662bc6ec75f10ff0e181b3ce2e4f542c5d13bde0d94bf1ed32dcfdbd031",
    "transactionHash": "0xe2ed4f85c77b068af4d1a3dad8791ac7e45e0f09e268e522e95148a3e4494d79",
    "logs": [],
    "blockNumber": 31413003,
    "cumulativeGasUsed": "4187667",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "669da26b2049a035994bb66b35ec132a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ControllerAlreadyInitializedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ControllerInvalidIncentivizationFeeError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ControllerInvalidLiquidationFeeError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ControllerInvalidMinFundingFeeError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ControllerInvalidProtocolFeeError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ControllerNoZeroCoordinatorError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ControllerNotAllowedError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"controllerId\",\"type\":\"uint256\"}],\"name\":\"ControllerNotOwnerError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"coordinatorId\",\"type\":\"uint256\"}],\"name\":\"ControllerNotPauserError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"controllerId\",\"type\":\"uint256\"}],\"name\":\"ControllerNotPendingOwnerError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"}],\"name\":\"UInitializableAlreadyInitializedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UInitializableNotInitializingError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UInitializableZeroVersionError\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"coordinatorId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"AllowedUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract ICollateral\",\"name\":\"newCollateral\",\"type\":\"address\"}],\"name\":\"CollateralUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"coordinatorId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"CoordinatorCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"coordinatorId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"CoordinatorOwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"coordinatorId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"CoordinatorPausedUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"coordinatorId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pauser\",\"type\":\"address\"}],\"name\":\"CoordinatorPauserUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"coordinatorId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPendingOwner\",\"type\":\"address\"}],\"name\":\"CoordinatorPendingOwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"coordinatorId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"}],\"name\":\"CoordinatorTreasuryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"UFixed18\",\"name\":\"newIncentivizationFee\",\"type\":\"uint256\"}],\"name\":\"IncentivizationFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IIncentivizer\",\"name\":\"newIncentivizer\",\"type\":\"address\"}],\"name\":\"IncentivizerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"UFixed18\",\"name\":\"newLiquidationFee\",\"type\":\"uint256\"}],\"name\":\"LiquidationFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"UFixed18\",\"name\":\"newMinCollateral\",\"type\":\"uint256\"}],\"name\":\"MinCollateralUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"UFixed18\",\"name\":\"newMinFundingFee\",\"type\":\"uint256\"}],\"name\":\"MinFundingFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IBeacon\",\"name\":\"newProductBeacon\",\"type\":\"address\"}],\"name\":\"ProductBeaconUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IProduct\",\"name\":\"product\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IProductProvider\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"ProductCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newProgramsPerProduct\",\"type\":\"uint256\"}],\"name\":\"ProgramsPerProductUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"UFixed18\",\"name\":\"newProtocolFee\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeeUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"coordinatorId\",\"type\":\"uint256\"}],\"name\":\"acceptCoordinatorOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateral\",\"outputs\":[{\"internalType\":\"contract ICollateral\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IProduct\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"coordinatorFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"coordinatorId\",\"type\":\"uint256\"}],\"name\":\"coordinators\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pauser\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"internalType\":\"struct IController.Coordinator\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createCoordinator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"coordinatorId\",\"type\":\"uint256\"},{\"internalType\":\"contract IProductProvider\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"createProduct\",\"outputs\":[{\"internalType\":\"contract IProduct\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incentivizationFee\",\"outputs\":[{\"internalType\":\"UFixed18\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incentivizer\",\"outputs\":[{\"internalType\":\"contract IIncentivizer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ICollateral\",\"name\":\"collateral_\",\"type\":\"address\"},{\"internalType\":\"contract IIncentivizer\",\"name\":\"incentivizer_\",\"type\":\"address\"},{\"internalType\":\"contract IBeacon\",\"name\":\"productBeacon_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IProduct\",\"name\":\"product\",\"type\":\"address\"}],\"name\":\"isProduct\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidationFee\",\"outputs\":[{\"internalType\":\"UFixed18\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minCollateral\",\"outputs\":[{\"internalType\":\"UFixed18\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minFundingFee\",\"outputs\":[{\"internalType\":\"UFixed18\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IProduct\",\"name\":\"product\",\"type\":\"address\"}],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"coordinatorId\",\"type\":\"uint256\"}],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"coordinatorId\",\"type\":\"uint256\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IProduct\",\"name\":\"product\",\"type\":\"address\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IProduct\",\"name\":\"product\",\"type\":\"address\"}],\"name\":\"pauser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"coordinatorId\",\"type\":\"uint256\"}],\"name\":\"pauser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"coordinatorId\",\"type\":\"uint256\"}],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"productBeacon\",\"outputs\":[{\"internalType\":\"contract IBeacon\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"programsPerProduct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFee\",\"outputs\":[{\"internalType\":\"UFixed18\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IProduct\",\"name\":\"product\",\"type\":\"address\"}],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"coordinatorId\",\"type\":\"uint256\"}],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"coordinatorId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"newAllowed\",\"type\":\"bool\"}],\"name\":\"updateAllowed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ICollateral\",\"name\":\"newCollateral\",\"type\":\"address\"}],\"name\":\"updateCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"coordinatorId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"newPaused\",\"type\":\"bool\"}],\"name\":\"updateCoordinatorPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"coordinatorId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newPauser\",\"type\":\"address\"}],\"name\":\"updateCoordinatorPauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"coordinatorId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newPendingOwner\",\"type\":\"address\"}],\"name\":\"updateCoordinatorPendingOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"coordinatorId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newTreasury\",\"type\":\"address\"}],\"name\":\"updateCoordinatorTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"UFixed18\",\"name\":\"newIncentivizationFee\",\"type\":\"uint256\"}],\"name\":\"updateIncentivizationFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IIncentivizer\",\"name\":\"newIncentivizer\",\"type\":\"address\"}],\"name\":\"updateIncentivizer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"UFixed18\",\"name\":\"newLiquidationFee\",\"type\":\"uint256\"}],\"name\":\"updateLiquidationFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"UFixed18\",\"name\":\"newMinCollateral\",\"type\":\"uint256\"}],\"name\":\"updateMinCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"UFixed18\",\"name\":\"newMinFundingFee\",\"type\":\"uint256\"}],\"name\":\"updateMinFundingFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IBeacon\",\"name\":\"newProductBeacon\",\"type\":\"address\"}],\"name\":\"updateProductBeacon\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newProgramsPerProduct\",\"type\":\"uint256\"}],\"name\":\"updateProgramsPerProduct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"UFixed18\",\"name\":\"newProtocolFee\",\"type\":\"uint256\"}],\"name\":\"updateProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptCoordinatorOwner(uint256)\":{\"details\":\"Must be called by the coordinator's pending owner\",\"params\":{\"coordinatorId\":\"Coordinator to update\"}},\"coordinators(uint256)\":{\"params\":{\"coordinatorId\":\"Coordinator to return for\"},\"returns\":{\"_0\":\"Coordinator state\"}},\"createCoordinator()\":{\"details\":\"`treasury` and `pauser` initialize as the 0-address, defaulting to the `owner`\",\"returns\":{\"_0\":\"New coordinator ID\"}},\"createProduct(uint256,address)\":{\"details\":\"Coordinator caller must be allowed\",\"params\":{\"coordinatorId\":\"Coordinator that will own the product\",\"provider\":\"Provider that will service the market\"},\"returns\":{\"_0\":\"New product contract address\"}},\"initialize(address,address,address)\":{\"details\":\"Must be called atomically as part of the upgradeable proxy deployment to      avoid front-running\",\"params\":{\"collateral_\":\"Collateral contract address\",\"incentivizer_\":\"Incentivizer contract address\",\"productBeacon_\":\"Product implementation beacon address\"}},\"isProduct(address)\":{\"params\":{\"product\":\"Contract address to check\"},\"returns\":{\"_0\":\"Whether a contract is a product\"}},\"owner()\":{\"returns\":{\"_0\":\"Owner of the protocol\"}},\"owner(address)\":{\"params\":{\"product\":\"Product to return for\"},\"returns\":{\"_0\":\"Owner of the product\"}},\"owner(uint256)\":{\"params\":{\"coordinatorId\":\"Coordinator to return for\"},\"returns\":{\"_0\":\"Owner of the coordinator\"}},\"paused()\":{\"returns\":{\"_0\":\"Paused status of the protocol\"}},\"paused(address)\":{\"params\":{\"product\":\"Product to return for\"},\"returns\":{\"_0\":\"Paused status of the product\"}},\"paused(uint256)\":{\"params\":{\"coordinatorId\":\"Coordinator to return for\"},\"returns\":{\"_0\":\"Paused status of the coordinator\"}},\"pauser()\":{\"details\":\"Defaults to the `owner` when `pauser` is unset\",\"returns\":{\"_0\":\"Pauser of the protocol\"}},\"pauser(address)\":{\"details\":\"Defaults to the `owner` when `pauser` is unset\",\"params\":{\"product\":\"Product to return for\"},\"returns\":{\"_0\":\"Pauser of the product\"}},\"pauser(uint256)\":{\"details\":\"Defaults to the `owner` when `pauser` is unset\",\"params\":{\"coordinatorId\":\"Coordinator to return for\"},\"returns\":{\"_0\":\"Pauser of the coordinator\"}},\"pendingOwner()\":{\"returns\":{\"_0\":\"Owner of the protocol\"}},\"pendingOwner(uint256)\":{\"params\":{\"coordinatorId\":\"Coordinator to return for\"},\"returns\":{\"_0\":\"Pending owner of the coordinator\"}},\"treasury()\":{\"details\":\"Defaults to the `owner` when `treasury` is unset\",\"returns\":{\"_0\":\"Treasury of the protocol\"}},\"treasury(address)\":{\"details\":\"Defaults to the `owner` when `treasury` is unset\",\"params\":{\"product\":\"Product to return for\"},\"returns\":{\"_0\":\"Treasury of the product\"}},\"treasury(uint256)\":{\"details\":\"Defaults to the `owner` when `treasury` is unset\",\"params\":{\"coordinatorId\":\"Coordinator to return for\"},\"returns\":{\"_0\":\"Treasury of the coordinator\"}},\"updateAllowed(uint256,bool)\":{\"params\":{\"coordinatorId\":\"Coordinator to update\",\"newAllowed\":\"New allowed status for `coordinatorId`\"}},\"updateCollateral(address)\":{\"params\":{\"newCollateral\":\"New Collateral contract address\"}},\"updateCoordinatorPaused(uint256,bool)\":{\"details\":\"Must be called by the coordinator's current owner\",\"params\":{\"coordinatorId\":\"Coordinator to update\",\"newPaused\":\"New paused status\"}},\"updateCoordinatorPauser(uint256,address)\":{\"details\":\"Must be called by the coordinator's current owner\",\"params\":{\"coordinatorId\":\"Coordinator to update\",\"newPauser\":\"New pauser address\"}},\"updateCoordinatorPendingOwner(uint256,address)\":{\"details\":\"Must be called by the coordinator's current owner\",\"params\":{\"coordinatorId\":\"Coordinator to update\",\"newPendingOwner\":\"New pending owner address\"}},\"updateCoordinatorTreasury(uint256,address)\":{\"details\":\"Must be called by the coordinator's current owner\",\"params\":{\"coordinatorId\":\"Coordinator to update\",\"newTreasury\":\"New treasury address\"}},\"updateIncentivizationFee(uint256)\":{\"params\":{\"newIncentivizationFee\":\"New incentivization fee\"}},\"updateIncentivizer(address)\":{\"params\":{\"newIncentivizer\":\"New Incentivizer contract address\"}},\"updateLiquidationFee(uint256)\":{\"params\":{\"newLiquidationFee\":\"New liquidation fee\"}},\"updateMinCollateral(uint256)\":{\"params\":{\"newMinCollateral\":\"New minimum allowed collateral amount\"}},\"updateMinFundingFee(uint256)\":{\"params\":{\"newMinFundingFee\":\"New minimum allowed funding fee\"}},\"updateProductBeacon(address)\":{\"params\":{\"newProductBeacon\":\"New Product implementation beacon address\"}},\"updateProgramsPerProduct(uint256)\":{\"params\":{\"newProgramsPerProduct\":\"New maximum incentivization programs per product allowed\"}},\"updateProtocolFee(uint256)\":{\"params\":{\"newProtocolFee\":\"New protocol-product fee split\"}}},\"stateVariables\":{\"_coordinators\":{\"details\":\"List of product coordinators\"},\"allowed\":{\"details\":\"Whether a specific coordinator is allowed to create a new product\"},\"collateral\":{\"details\":\"Collateral contract address for the protocol\"},\"coordinatorFor\":{\"details\":\"Mapping of the coordinator for each  product\"},\"incentivizationFee\":{\"details\":\"Fee on incentivization programs\"},\"incentivizer\":{\"details\":\"Incentivizer contract address for the protocol\"},\"liquidationFee\":{\"details\":\"Fee on maintenance for liquidation\"},\"minCollateral\":{\"details\":\"Minimum allowable collateral amount per user account\"},\"minFundingFee\":{\"details\":\"Minimum allowable funding fee for a product\"},\"productBeacon\":{\"details\":\"Product implementation beacon address for the protocol\"},\"programsPerProduct\":{\"details\":\"Maximum incentivization programs per product allowed\"},\"protocolFee\":{\"details\":\"Percent of collected fees that go to the protocol treasury vs the product treasury\"}},\"title\":\"Controller\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptCoordinatorOwner(uint256)\":{\"notice\":\"Accepts ownership over an existing coordinator\"},\"coordinators(uint256)\":{\"notice\":\"Returns coordinator state for coordinator `coordinatorId`\"},\"createCoordinator()\":{\"notice\":\"Creates a new coordinator with `msg.sender` as the owner\"},\"createProduct(uint256,address)\":{\"notice\":\"Creates a new product market with `provider`\"},\"initialize(address,address,address)\":{\"notice\":\"Initializes the contract state\"},\"isProduct(address)\":{\"notice\":\"Returns whether a contract is a product\"},\"owner()\":{\"notice\":\"Returns the owner of the protocol\"},\"owner(address)\":{\"notice\":\"Returns the owner of the product `product`\"},\"owner(uint256)\":{\"notice\":\"Returns the owner of the coordinator `coordinatorId`\"},\"paused()\":{\"notice\":\"Returns the paused status of the protocol\"},\"paused(address)\":{\"notice\":\"Returns the paused status of the product `product`\"},\"paused(uint256)\":{\"notice\":\"Returns the paused status of the coordinator `coordinatorId`\"},\"pauser()\":{\"notice\":\"Returns the pauser of the protocol\"},\"pauser(address)\":{\"notice\":\"Returns the pauser of the product `product`\"},\"pauser(uint256)\":{\"notice\":\"Returns the pauser of the coordinator `coordinatorId`\"},\"pendingOwner()\":{\"notice\":\"Returns the pending owner of the protocol\"},\"pendingOwner(uint256)\":{\"notice\":\"Returns the pending owner of the coordinator `coordinatorId`\"},\"treasury()\":{\"notice\":\"Returns the treasury of the protocol\"},\"treasury(address)\":{\"notice\":\"Returns the treasury of the product `product`\"},\"treasury(uint256)\":{\"notice\":\"Returns the treasury of the coordinator `coordinatorId`\"},\"updateAllowed(uint256,bool)\":{\"notice\":\"Updates whether `coordinatorId` is allowed to create new products\"},\"updateCollateral(address)\":{\"notice\":\"Updates the Collateral contract address\"},\"updateCoordinatorPaused(uint256,bool)\":{\"notice\":\"Updates the paused status of an existing coordinator\"},\"updateCoordinatorPauser(uint256,address)\":{\"notice\":\"Updates the pauser of an existing coordinator\"},\"updateCoordinatorPendingOwner(uint256,address)\":{\"notice\":\"Updates the pending owner of an existing coordinator\"},\"updateCoordinatorTreasury(uint256,address)\":{\"notice\":\"Updates the treasury of an existing coordinator\"},\"updateIncentivizationFee(uint256)\":{\"notice\":\"Updates the incentivization fee\"},\"updateIncentivizer(address)\":{\"notice\":\"Updates the Incentivizer contract address\"},\"updateLiquidationFee(uint256)\":{\"notice\":\"Updates the liquidation fee\"},\"updateMinCollateral(uint256)\":{\"notice\":\"Updates the minimum allowed collateral amount per user account\"},\"updateMinFundingFee(uint256)\":{\"notice\":\"Updates the minimum allowed funding fee\"},\"updateProductBeacon(address)\":{\"notice\":\"Updates the Product implementation beacon address\"},\"updateProgramsPerProduct(uint256)\":{\"notice\":\"Updates the maximum incentivization programs per product allowed\"},\"updateProtocolFee(uint256)\":{\"notice\":\"Updates the protocol-product fee split\"}},\"notice\":\"Manages creating new products and global protocol parameters.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/controller/Controller.sol\":\"Controller\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@equilibria/root/control/unstructured/UInitializable.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.13;\\n\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"../../storage/UStorage.sol\\\";\\n\\n/**\\n * @title UInitializable\\n * @notice Library to manage the initialization lifecycle of upgradeable contracts\\n * @dev `UInitializable` allows the creation of pseudo-constructors for upgradeable contracts. One\\n *      `initializer` should be declared per top-level contract. Child contracts can use the `onlyInitializer`\\n *      modifier to tag their internal initialization functions to ensure that they can only be called\\n *      from a top-level `initializer` or a constructor.\\n */\\nabstract contract UInitializable {\\n    error UInitializableZeroVersionError();\\n    error UInitializableAlreadyInitializedError(uint256 version);\\n    error UInitializableNotInitializingError();\\n\\n    /// @dev The initialized flag\\n    Uint256Storage private constant _version = Uint256Storage.wrap(keccak256(\\\"equilibria.root.UInitializable.version\\\"));\\n\\n    /// @dev The initializing flag\\n    BoolStorage private constant _initializing = BoolStorage.wrap(keccak256(\\\"equilibria.root.UInitializable.initializing\\\"));\\n\\n    /// @dev Can only be called once per version, `version` is 1-indexed\\n    modifier initializer(uint256 version) {\\n        if (version == 0) revert UInitializableZeroVersionError();\\n        if (_version.read() >= version) revert UInitializableAlreadyInitializedError(version);\\n\\n        _version.store(version);\\n        _initializing.store(true);\\n\\n        _;\\n\\n        _initializing.store(false);\\n    }\\n\\n    /// @dev Can only be called from an initializer or constructor\\n    modifier onlyInitializer() {\\n        if (!_constructing() && !_initializing.read()) revert UInitializableNotInitializingError();\\n        _;\\n    }\\n\\n    /**\\n     * @notice Returns whether the contract is currently being constructed\\n     * @dev {Address.isContract} returns false for contracts currently in the process of being constructed\\n     * @return Whether the contract is currently being constructed\\n     */\\n    function _constructing() private view returns (bool) {\\n        return !Address.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0xf88a17a4d1c8126df114a8e3ca095702699d1c270bf75eb49f595a681cf4b9c2\",\"license\":\"Apache-2.0\"},\"@equilibria/root/number/types/Fixed18.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.13;\\n\\nimport \\\"@openzeppelin/contracts/utils/math/SignedMath.sol\\\";\\nimport \\\"./UFixed18.sol\\\";\\nimport \\\"./PackedFixed18.sol\\\";\\n\\n/// @dev Fixed18 type\\ntype Fixed18 is int256;\\nusing Fixed18Lib for Fixed18 global;\\ntype Fixed18Storage is bytes32;\\nusing Fixed18StorageLib for Fixed18Storage global;\\n\\n/**\\n * @title Fixed18Lib\\n * @notice Library for the signed fixed-decimal type.\\n */\\nlibrary Fixed18Lib {\\n    error Fixed18OverflowError(uint256 value);\\n    error Fixed18PackingOverflowError(int256 value);\\n    error Fixed18PackingUnderflowError(int256 value);\\n\\n    int256 private constant BASE = 1e18;\\n    Fixed18 public constant ZERO = Fixed18.wrap(0);\\n    Fixed18 public constant ONE = Fixed18.wrap(BASE);\\n    Fixed18 public constant NEG_ONE = Fixed18.wrap(-1 * BASE);\\n    Fixed18 public constant MAX = Fixed18.wrap(type(int256).max);\\n    Fixed18 public constant MIN = Fixed18.wrap(type(int256).min);\\n\\n    /**\\n     * @notice Creates a signed fixed-decimal from an unsigned fixed-decimal\\n     * @param a Unsigned fixed-decimal\\n     * @return New signed fixed-decimal\\n     */\\n    function from(UFixed18 a) internal pure returns (Fixed18) {\\n        uint256 value = UFixed18.unwrap(a);\\n        if (value > uint256(type(int256).max)) revert Fixed18OverflowError(value);\\n        return Fixed18.wrap(int256(value));\\n    }\\n\\n    /**\\n     * @notice Creates a signed fixed-decimal from a sign and an unsigned fixed-decimal\\n     * @param s Sign\\n     * @param m Unsigned fixed-decimal magnitude\\n     * @return New signed fixed-decimal\\n     */\\n    function from(int256 s, UFixed18 m) internal pure returns (Fixed18) {\\n        if (s > 0) return from(m);\\n        if (s < 0) return Fixed18.wrap(-1 * Fixed18.unwrap(from(m)));\\n        return ZERO;\\n    }\\n\\n    /**\\n     * @notice Creates a signed fixed-decimal from a signed integer\\n     * @param a Signed number\\n     * @return New signed fixed-decimal\\n     */\\n    function from(int256 a) internal pure returns (Fixed18) {\\n        return Fixed18.wrap(a * BASE);\\n    }\\n\\n    /**\\n     * @notice Creates a packed signed fixed-decimal from an signed fixed-decimal\\n     * @param a signed fixed-decimal\\n     * @return New packed signed fixed-decimal\\n     */\\n    function pack(Fixed18 a) internal pure returns (PackedFixed18) {\\n        int256 value = Fixed18.unwrap(a);\\n        if (value > type(int128).max) revert Fixed18PackingOverflowError(value);\\n        if (value < type(int128).min) revert Fixed18PackingUnderflowError(value);\\n        return PackedFixed18.wrap(int128(value));\\n    }\\n\\n    /**\\n     * @notice Returns whether the signed fixed-decimal is equal to zero.\\n     * @param a Signed fixed-decimal\\n     * @return Whether the signed fixed-decimal is zero.\\n     */\\n    function isZero(Fixed18 a) internal pure returns (bool) {\\n        return Fixed18.unwrap(a) == 0;\\n    }\\n\\n    /**\\n     * @notice Adds two signed fixed-decimals `a` and `b` together\\n     * @param a First signed fixed-decimal\\n     * @param b Second signed fixed-decimal\\n     * @return Resulting summed signed fixed-decimal\\n     */\\n    function add(Fixed18 a, Fixed18 b) internal pure returns (Fixed18) {\\n        return Fixed18.wrap(Fixed18.unwrap(a) + Fixed18.unwrap(b));\\n    }\\n\\n    /**\\n     * @notice Subtracts signed fixed-decimal `b` from `a`\\n     * @param a Signed fixed-decimal to subtract from\\n     * @param b Signed fixed-decimal to subtract\\n     * @return Resulting subtracted signed fixed-decimal\\n     */\\n    function sub(Fixed18 a, Fixed18 b) internal pure returns (Fixed18) {\\n        return Fixed18.wrap(Fixed18.unwrap(a) - Fixed18.unwrap(b));\\n    }\\n\\n    /**\\n     * @notice Multiplies two signed fixed-decimals `a` and `b` together\\n     * @param a First signed fixed-decimal\\n     * @param b Second signed fixed-decimal\\n     * @return Resulting multiplied signed fixed-decimal\\n     */\\n    function mul(Fixed18 a, Fixed18 b) internal pure returns (Fixed18) {\\n        return Fixed18.wrap(Fixed18.unwrap(a) * Fixed18.unwrap(b) / BASE);\\n    }\\n\\n    /**\\n     * @notice Divides signed fixed-decimal `a` by `b`\\n     * @param a Signed fixed-decimal to divide\\n     * @param b Signed fixed-decimal to divide by\\n     * @return Resulting divided signed fixed-decimal\\n     */\\n    function div(Fixed18 a, Fixed18 b) internal pure returns (Fixed18) {\\n        return Fixed18.wrap(Fixed18.unwrap(a) * BASE / Fixed18.unwrap(b));\\n    }\\n\\n    /**\\n     * @notice Divides unsigned fixed-decimal `a` by `b`\\n     * @dev Does not revert on divide-by-0, instead returns `ONE` for `0/0`, `MAX` for `n/0`, and `MIN` for `-n/0`.\\n     * @param a Unsigned fixed-decimal to divide\\n     * @param b Unsigned fixed-decimal to divide by\\n     * @return Resulting divided unsigned fixed-decimal\\n     */\\n    function unsafeDiv(Fixed18 a, Fixed18 b) internal pure returns (Fixed18) {\\n        if (isZero(b)) {\\n            if (gt(a, ZERO)) return MAX;\\n            if (lt(a, ZERO)) return MIN;\\n            return ONE;\\n        } else {\\n            return div(a, b);\\n        }\\n    }\\n\\n    /**\\n     * @notice Returns whether signed fixed-decimal `a` is equal to `b`\\n     * @param a First signed fixed-decimal\\n     * @param b Second signed fixed-decimal\\n     * @return Whether `a` is equal to `b`\\n     */\\n    function eq(Fixed18 a, Fixed18 b) internal pure returns (bool) {\\n        return compare(a, b) == 1;\\n    }\\n\\n    /**\\n     * @notice Returns whether signed fixed-decimal `a` is greater than `b`\\n     * @param a First signed fixed-decimal\\n     * @param b Second signed fixed-decimal\\n     * @return Whether `a` is greater than `b`\\n     */\\n    function gt(Fixed18 a, Fixed18 b) internal pure returns (bool) {\\n        return compare(a, b) == 2;\\n    }\\n\\n    /**\\n     * @notice Returns whether signed fixed-decimal `a` is less than `b`\\n     * @param a First signed fixed-decimal\\n     * @param b Second signed fixed-decimal\\n     * @return Whether `a` is less than `b`\\n     */\\n    function lt(Fixed18 a, Fixed18 b) internal pure returns (bool) {\\n        return compare(a, b) == 0;\\n    }\\n\\n    /**\\n     * @notice Returns whether signed fixed-decimal `a` is greater than or equal to `b`\\n     * @param a First signed fixed-decimal\\n     * @param b Second signed fixed-decimal\\n     * @return Whether `a` is greater than or equal to `b`\\n     */\\n    function gte(Fixed18 a, Fixed18 b) internal pure returns (bool) {\\n        return gt(a, b) || eq(a, b);\\n    }\\n\\n    /**\\n     * @notice Returns whether signed fixed-decimal `a` is less than or equal to `b`\\n     * @param a First signed fixed-decimal\\n     * @param b Second signed fixed-decimal\\n     * @return Whether `a` is less than or equal to `b`\\n     */\\n    function lte(Fixed18 a, Fixed18 b) internal pure returns (bool) {\\n        return lt(a, b) || eq(a, b);\\n    }\\n\\n    /**\\n     * @notice Compares the signed fixed-decimals `a` and `b`\\n     * @dev Returns: 2 for greater than\\n     *               1 for equal to\\n     *               0 for less than\\n     * @param a First signed fixed-decimal\\n     * @param b Second signed fixed-decimal\\n     * @return Compare result of `a` and `b`\\n     */\\n    function compare(Fixed18 a, Fixed18 b) internal pure returns (uint256) {\\n        (int256 au, int256 bu) = (Fixed18.unwrap(a), Fixed18.unwrap(b));\\n        if (au > bu) return 2;\\n        if (au < bu) return 0;\\n        return 1;\\n    }\\n\\n    /**\\n     * @notice Returns a signed fixed-decimal representing the ratio of `a` over `b`\\n     * @param a First signed number\\n     * @param b Second signed number\\n     * @return Ratio of `a` over `b`\\n     */\\n    function ratio(int256 a, int256 b) internal pure returns (Fixed18) {\\n        return Fixed18.wrap(a * BASE / b);\\n    }\\n\\n    /**\\n     * @notice Returns the minimum of signed fixed-decimals `a` and `b`\\n     * @param a First signed fixed-decimal\\n     * @param b Second signed fixed-decimal\\n     * @return Minimum of `a` and `b`\\n     */\\n    function min(Fixed18 a, Fixed18 b) internal pure returns (Fixed18) {\\n        return Fixed18.wrap(SignedMath.min(Fixed18.unwrap(a), Fixed18.unwrap(b)));\\n    }\\n\\n    /**\\n     * @notice Returns the maximum of signed fixed-decimals `a` and `b`\\n     * @param a First signed fixed-decimal\\n     * @param b Second signed fixed-decimal\\n     * @return Maximum of `a` and `b`\\n     */\\n    function max(Fixed18 a, Fixed18 b) internal pure returns (Fixed18) {\\n        return Fixed18.wrap(SignedMath.max(Fixed18.unwrap(a), Fixed18.unwrap(b)));\\n    }\\n\\n    /**\\n     * @notice Converts the signed fixed-decimal into an integer, truncating any decimal portion\\n     * @param a Signed fixed-decimal\\n     * @return Truncated signed number\\n     */\\n    function truncate(Fixed18 a) internal pure returns (int256) {\\n        return Fixed18.unwrap(a) / BASE;\\n    }\\n\\n    /**\\n     * @notice Returns the sign of the signed fixed-decimal\\n     * @dev Returns: -1 for negative\\n     *                0 for zero\\n     *                1 for positive\\n     * @param a Signed fixed-decimal\\n     * @return Sign of the signed fixed-decimal\\n     */\\n    function sign(Fixed18 a) internal pure returns (int256) {\\n        if (Fixed18.unwrap(a) > 0) return 1;\\n        if (Fixed18.unwrap(a) < 0) return -1;\\n        return 0;\\n    }\\n\\n    /**\\n     * @notice Returns the absolute value of the signed fixed-decimal\\n     * @param a Signed fixed-decimal\\n     * @return Absolute value of the signed fixed-decimal\\n     */\\n    function abs(Fixed18 a) internal pure returns (UFixed18) {\\n        return UFixed18.wrap(SignedMath.abs(Fixed18.unwrap(a)));\\n    }\\n}\\n\\nlibrary Fixed18StorageLib {\\n    function read(Fixed18Storage self) internal view returns (Fixed18 value) {\\n        assembly {\\n            value := sload(self)\\n        }\\n    }\\n\\n    function store(Fixed18Storage self, Fixed18 value) internal {\\n        assembly {\\n            sstore(self, value)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xbc92cd7d606135a23077ed1921eb565bc06857e5fdeaa755b7e71586dd8565c2\",\"license\":\"Apache-2.0\"},\"@equilibria/root/number/types/PackedFixed18.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.13;\\n\\nimport \\\"./Fixed18.sol\\\";\\n\\n/// @dev PackedFixed18 type\\ntype PackedFixed18 is int128;\\nusing PackedFixed18Lib for PackedFixed18 global;\\n\\n/**\\n * @title PackedFixed18Lib\\n * @dev A packed version of the Fixed18 which takes up half the storage space (two PackedFixed18 can be packed\\n *      into a single slot). Only valid within the range -1.7014118e+20 <= x <= 1.7014118e+20.\\n * @notice Library for the packed signed fixed-decimal type.\\n */\\nlibrary PackedFixed18Lib {\\n    PackedFixed18 public constant MAX = PackedFixed18.wrap(type(int128).max);\\n    PackedFixed18 public constant MIN = PackedFixed18.wrap(type(int128).min);\\n\\n    /**\\n     * @notice Creates a signed fixed-decimal from a sign and an unsigned fixed-decimal\\n     * @param self Sign\\n     * @return New signed fixed-decimal\\n     */\\n    function unpack(PackedFixed18 self) internal pure returns (Fixed18) {\\n        return Fixed18.wrap(int256(PackedFixed18.unwrap(self)));\\n    }\\n}\\n\",\"keccak256\":\"0x860a1c54ea451289abde9ad678d5dc2e92432b17df648f0421bc6ffbf48b00b2\",\"license\":\"Apache-2.0\"},\"@equilibria/root/number/types/PackedUFixed18.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.13;\\n\\nimport \\\"./UFixed18.sol\\\";\\n\\n/// @dev PackedUFixed18 type\\ntype PackedUFixed18 is uint128;\\nusing PackedUFixed18Lib for PackedUFixed18 global;\\n\\n/**\\n * @title PackedUFixed18Lib\\n * @dev A packed version of the UFixed18 which takes up half the storage space (two PackedUFixed18 can be packed\\n *      into a single slot). Only valid within the range 0 <= x <= 3.4028237e+20.\\n * @notice Library for the packed unsigned fixed-decimal type.\\n */\\nlibrary PackedUFixed18Lib {\\n    PackedUFixed18 public constant MAX = PackedUFixed18.wrap(type(uint128).max);\\n\\n    /**\\n     * @notice Creates a signed fixed-decimal from a sign and an unsigned fixed-decimal\\n     * @param self Sign\\n     * @return New signed fixed-decimal\\n     */\\n    function unpack(PackedUFixed18 self) internal pure returns (UFixed18) {\\n        return UFixed18.wrap(uint256(PackedUFixed18.unwrap(self)));\\n    }\\n}\\n\",\"keccak256\":\"0xa12f541b8e2a2a3d5efeebdb3f39caec1db69cb7ce9ad5c6de12235a55a47a2d\",\"license\":\"Apache-2.0\"},\"@equilibria/root/number/types/UFixed18.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.13;\\n\\nimport \\\"@openzeppelin/contracts/utils/math/Math.sol\\\";\\nimport \\\"./Fixed18.sol\\\";\\nimport \\\"./PackedUFixed18.sol\\\";\\n\\n/// @dev UFixed18 type\\ntype UFixed18 is uint256;\\nusing UFixed18Lib for UFixed18 global;\\ntype UFixed18Storage is bytes32;\\nusing UFixed18StorageLib for UFixed18Storage global;\\n\\n/**\\n * @title UFixed18Lib\\n * @notice Library for the unsigned fixed-decimal type.\\n */\\nlibrary UFixed18Lib {\\n    error UFixed18UnderflowError(int256 value);\\n    error UFixed18PackingOverflowError(uint256 value);\\n\\n    uint256 private constant BASE = 1e18;\\n    UFixed18 public constant ZERO = UFixed18.wrap(0);\\n    UFixed18 public constant ONE = UFixed18.wrap(BASE);\\n    UFixed18 public constant MAX = UFixed18.wrap(type(uint256).max);\\n\\n    /**\\n     * @notice Creates a unsigned fixed-decimal from a signed fixed-decimal\\n     * @param a Signed fixed-decimal\\n     * @return New unsigned fixed-decimal\\n     */\\n    function from(Fixed18 a) internal pure returns (UFixed18) {\\n        int256 value = Fixed18.unwrap(a);\\n        if (value < 0) revert UFixed18UnderflowError(value);\\n        return UFixed18.wrap(uint256(value));\\n    }\\n\\n    /**\\n     * @notice Creates a unsigned fixed-decimal from a unsigned integer\\n     * @param a Unsigned number\\n     * @return New unsigned fixed-decimal\\n     */\\n    function from(uint256 a) internal pure returns (UFixed18) {\\n        return UFixed18.wrap(a * BASE);\\n    }\\n\\n    /**\\n     * @notice Creates a packed unsigned fixed-decimal from an unsigned fixed-decimal\\n     * @param a unsigned fixed-decimal\\n     * @return New packed unsigned fixed-decimal\\n     */\\n    function pack(UFixed18 a) internal pure returns (PackedUFixed18) {\\n        uint256 value = UFixed18.unwrap(a);\\n        if (value > type(uint128).max) revert UFixed18PackingOverflowError(value);\\n        return PackedUFixed18.wrap(uint128(value));\\n    }\\n\\n    /**\\n     * @notice Returns whether the unsigned fixed-decimal is equal to zero.\\n     * @param a Unsigned fixed-decimal\\n     * @return Whether the unsigned fixed-decimal is zero.\\n     */\\n    function isZero(UFixed18 a) internal pure returns (bool) {\\n        return UFixed18.unwrap(a) == 0;\\n    }\\n\\n    /**\\n     * @notice Adds two unsigned fixed-decimals `a` and `b` together\\n     * @param a First unsigned fixed-decimal\\n     * @param b Second unsigned fixed-decimal\\n     * @return Resulting summed unsigned fixed-decimal\\n     */\\n    function add(UFixed18 a, UFixed18 b) internal pure returns (UFixed18) {\\n        return UFixed18.wrap(UFixed18.unwrap(a) + UFixed18.unwrap(b));\\n    }\\n\\n    /**\\n     * @notice Subtracts unsigned fixed-decimal `b` from `a`\\n     * @param a Unsigned fixed-decimal to subtract from\\n     * @param b Unsigned fixed-decimal to subtract\\n     * @return Resulting subtracted unsigned fixed-decimal\\n     */\\n    function sub(UFixed18 a, UFixed18 b) internal pure returns (UFixed18) {\\n        return UFixed18.wrap(UFixed18.unwrap(a) - UFixed18.unwrap(b));\\n    }\\n\\n    /**\\n     * @notice Multiplies two unsigned fixed-decimals `a` and `b` together\\n     * @param a First unsigned fixed-decimal\\n     * @param b Second unsigned fixed-decimal\\n     * @return Resulting multiplied unsigned fixed-decimal\\n     */\\n    function mul(UFixed18 a, UFixed18 b) internal pure returns (UFixed18) {\\n        return UFixed18.wrap(UFixed18.unwrap(a) * UFixed18.unwrap(b) / BASE);\\n    }\\n\\n    /**\\n     * @notice Divides unsigned fixed-decimal `a` by `b`\\n     * @param a Unsigned fixed-decimal to divide\\n     * @param b Unsigned fixed-decimal to divide by\\n     * @return Resulting divided unsigned fixed-decimal\\n     */\\n    function div(UFixed18 a, UFixed18 b) internal pure returns (UFixed18) {\\n        return UFixed18.wrap(UFixed18.unwrap(a) * BASE / UFixed18.unwrap(b));\\n    }\\n\\n    /**\\n     * @notice Divides unsigned fixed-decimal `a` by `b`\\n     * @dev Does not revert on divide-by-0, instead returns `ONE` for `0/0` and `MAX` for `n/0`.\\n     * @param a Unsigned fixed-decimal to divide\\n     * @param b Unsigned fixed-decimal to divide by\\n     * @return Resulting divided unsigned fixed-decimal\\n     */\\n    function unsafeDiv(UFixed18 a, UFixed18 b) internal pure returns (UFixed18) {\\n        if (isZero(b)) {\\n            return isZero(a) ? ONE : MAX;\\n        } else {\\n            return div(a, b);\\n        }\\n    }\\n\\n    /**\\n     * @notice Returns whether unsigned fixed-decimal `a` is equal to `b`\\n     * @param a First unsigned fixed-decimal\\n     * @param b Second unsigned fixed-decimal\\n     * @return Whether `a` is equal to `b`\\n     */\\n    function eq(UFixed18 a, UFixed18 b) internal pure returns (bool) {\\n        return compare(a, b) == 1;\\n    }\\n\\n    /**\\n     * @notice Returns whether unsigned fixed-decimal `a` is greater than `b`\\n     * @param a First unsigned fixed-decimal\\n     * @param b Second unsigned fixed-decimal\\n     * @return Whether `a` is greater than `b`\\n     */\\n    function gt(UFixed18 a, UFixed18 b) internal pure returns (bool) {\\n        return compare(a, b) == 2;\\n    }\\n\\n    /**\\n     * @notice Returns whether unsigned fixed-decimal `a` is less than `b`\\n     * @param a First unsigned fixed-decimal\\n     * @param b Second unsigned fixed-decimal\\n     * @return Whether `a` is less than `b`\\n     */\\n    function lt(UFixed18 a, UFixed18 b) internal pure returns (bool) {\\n        return compare(a, b) == 0;\\n    }\\n\\n    /**\\n     * @notice Returns whether unsigned fixed-decimal `a` is greater than or equal to `b`\\n     * @param a First unsigned fixed-decimal\\n     * @param b Second unsigned fixed-decimal\\n     * @return Whether `a` is greater than or equal to `b`\\n     */\\n    function gte(UFixed18 a, UFixed18 b) internal pure returns (bool) {\\n        return gt(a, b) || eq(a, b);\\n    }\\n\\n    /**\\n     * @notice Returns whether unsigned fixed-decimal `a` is less than or equal to `b`\\n     * @param a First unsigned fixed-decimal\\n     * @param b Second unsigned fixed-decimal\\n     * @return Whether `a` is less than or equal to `b`\\n     */\\n    function lte(UFixed18 a, UFixed18 b) internal pure returns (bool) {\\n        return lt(a, b) || eq(a, b);\\n    }\\n\\n    /**\\n     * @notice Compares the unsigned fixed-decimals `a` and `b`\\n     * @dev Returns: 2 for greater than\\n     *               1 for equal to\\n     *               0 for less than\\n     * @param a First unsigned fixed-decimal\\n     * @param b Second unsigned fixed-decimal\\n     * @return Compare result of `a` and `b`\\n     */\\n    function compare(UFixed18 a, UFixed18 b) internal pure returns (uint256) {\\n        (uint256 au, uint256 bu) = (UFixed18.unwrap(a), UFixed18.unwrap(b));\\n        if (au > bu) return 2;\\n        if (au < bu) return 0;\\n        return 1;\\n    }\\n\\n    /**\\n     * @notice Returns a unsigned fixed-decimal representing the ratio of `a` over `b`\\n     * @param a First unsigned number\\n     * @param b Second unsigned number\\n     * @return Ratio of `a` over `b`\\n     */\\n    function ratio(uint256 a, uint256 b) internal pure returns (UFixed18) {\\n        return UFixed18.wrap(a * BASE / b);\\n    }\\n\\n    /**\\n     * @notice Returns the minimum of unsigned fixed-decimals `a` and `b`\\n     * @param a First unsigned fixed-decimal\\n     * @param b Second unsigned fixed-decimal\\n     * @return Minimum of `a` and `b`\\n     */\\n    function min(UFixed18 a, UFixed18 b) internal pure returns (UFixed18) {\\n        return UFixed18.wrap(Math.min(UFixed18.unwrap(a), UFixed18.unwrap(b)));\\n    }\\n\\n    /**\\n     * @notice Returns the maximum of unsigned fixed-decimals `a` and `b`\\n     * @param a First unsigned fixed-decimal\\n     * @param b Second unsigned fixed-decimal\\n     * @return Maximum of `a` and `b`\\n     */\\n    function max(UFixed18 a, UFixed18 b) internal pure returns (UFixed18) {\\n        return UFixed18.wrap(Math.max(UFixed18.unwrap(a), UFixed18.unwrap(b)));\\n    }\\n\\n    /**\\n     * @notice Converts the unsigned fixed-decimal into an integer, truncating any decimal portion\\n     * @param a Unsigned fixed-decimal\\n     * @return Truncated unsigned number\\n     */\\n    function truncate(UFixed18 a) internal pure returns (uint256) {\\n        return UFixed18.unwrap(a) / BASE;\\n    }\\n}\\n\\nlibrary UFixed18StorageLib {\\n    function read(UFixed18Storage self) internal view returns (UFixed18 value) {\\n        assembly {\\n            value := sload(self)\\n        }\\n    }\\n\\n    function store(UFixed18Storage self, UFixed18 value) internal {\\n        assembly {\\n            sstore(self, value)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x4f0058ff9e2a9f585346ca060b6dc511062284b4e67ac6f69e5aea6e71205b00\",\"license\":\"Apache-2.0\"},\"@equilibria/root/storage/UStorage.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.13;\\n\\nimport \\\"../number/types/UFixed18.sol\\\";\\n\\ntype BoolStorage is bytes32;\\nusing BoolStorageLib for BoolStorage global;\\ntype Uint256Storage is bytes32;\\nusing Uint256StorageLib for Uint256Storage global;\\ntype Int256Storage is bytes32;\\nusing Int256StorageLib for Int256Storage global;\\ntype AddressStorage is bytes32;\\nusing AddressStorageLib for AddressStorage global;\\ntype Bytes32Storage is bytes32;\\nusing Bytes32StorageLib for Bytes32Storage global;\\n\\nlibrary BoolStorageLib {\\n    function read(BoolStorage self) internal view returns (bool value) {\\n        assembly {\\n            value := sload(self)\\n        }\\n    }\\n\\n    function store(BoolStorage self, bool value) internal {\\n        assembly {\\n            sstore(self, value)\\n        }\\n    }\\n}\\n\\nlibrary Uint256StorageLib {\\n    function read(Uint256Storage self) internal view returns (uint256 value) {\\n        assembly {\\n            value := sload(self)\\n        }\\n    }\\n\\n    function store(Uint256Storage self, uint256 value) internal {\\n        assembly {\\n            sstore(self, value)\\n        }\\n    }\\n}\\n\\nlibrary Int256StorageLib {\\n    function read(Int256Storage self) internal view returns (int256 value) {\\n        assembly {\\n            value := sload(self)\\n        }\\n    }\\n\\n    function store(Int256Storage self, int256 value) internal {\\n        assembly {\\n            sstore(self, value)\\n        }\\n    }\\n}\\n\\nlibrary AddressStorageLib {\\n    function read(AddressStorage self) internal view returns (address value) {\\n        assembly {\\n            value := sload(self)\\n        }\\n    }\\n\\n    function store(AddressStorage self, address value) internal {\\n        assembly {\\n            sstore(self, value)\\n        }\\n    }\\n}\\n\\nlibrary Bytes32StorageLib {\\n    function read(Bytes32Storage self) internal view returns (bytes32 value) {\\n        assembly {\\n            value := sload(self)\\n        }\\n    }\\n\\n    function store(Bytes32Storage self, bytes32 value) internal {\\n        assembly {\\n            sstore(self, value)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5013ded297cc72266fa648a83658cf5a508cd537d78a0260cd31d18e9e523017\",\"license\":\"Apache-2.0\"},\"@equilibria/root/token/types/Token.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.13;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/math/Math.sol\\\";\\nimport \\\"../../number/types/UFixed18.sol\\\";\\n\\n/// @dev Token\\ntype Token is address;\\nusing TokenLib for Token global;\\ntype TokenStorage is bytes32;\\nusing TokenStorageLib for TokenStorage global;\\n\\n/**\\n * @title TokenLib\\n * @notice Library to manage Ether and ERC20s that is compliant with the fixed-decimal types.\\n * @dev Normalizes token operations with Ether operations (using a magic Ether address)\\n *      Automatically converts from token decimal-Base amounts to Base-18 UFixed18 amounts, with optional rounding\\n */\\nlibrary TokenLib {\\n    using Address for address;\\n    using SafeERC20 for IERC20;\\n\\n    error TokenPullEtherError();\\n    error TokenApproveEtherError();\\n\\n    uint256 private constant BASE = 1e18;\\n    Token public constant ETHER = Token.wrap(address(0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE));\\n\\n    /**\\n     * @notice Returns whether a token is the Ether address\\n     * @param self Token to check for\\n     * @return Whether the token is Ether\\n     */\\n    function isEther(Token self) internal pure returns (bool) {\\n        return Token.unwrap(self) == Token.unwrap(ETHER);\\n    }\\n\\n    /**\\n     * @notice Approves `grantee` to spend infinite tokens from the caller\\n     * @param self Token to transfer\\n     * @param grantee Address to allow spending\\n     */\\n    function approve(Token self, address grantee) internal {\\n        if (isEther(self)) revert TokenApproveEtherError();\\n        IERC20(Token.unwrap(self)).safeApprove(grantee, type(uint256).max);\\n    }\\n\\n    /**\\n     * @notice Approves `grantee` to spend `amount` tokens from the caller\\n     * @param self Token to transfer\\n     * @param grantee Address to allow spending\\n     * @param amount Amount of tokens to approve to spend\\n     */\\n    function approve(Token self, address grantee, UFixed18 amount) internal {\\n        if (isEther(self)) revert TokenApproveEtherError();\\n        IERC20(Token.unwrap(self)).safeApprove(grantee, toTokenAmount(self, amount, false));\\n    }\\n\\n    /**\\n     * @notice Approves `grantee` to spend `amount` tokens from the caller\\n     * @param self Token to transfer\\n     * @param grantee Address to allow spending\\n     * @param amount Amount of tokens to approve to spend\\n     * @param roundUp Whether to round decimal token amount up to the next unit\\n     */\\n    function approve(Token self, address grantee, UFixed18 amount, bool roundUp) internal {\\n        if (isEther(self)) revert TokenApproveEtherError();\\n        IERC20(Token.unwrap(self)).safeApprove(grantee, toTokenAmount(self, amount, roundUp));\\n    }\\n\\n    /**\\n     * @notice Transfers all held tokens from the caller to the `recipient`\\n     * @param self Token to transfer\\n     * @param recipient Address to receive the tokens\\n     */\\n    function push(Token self, address recipient) internal {\\n        push(self, recipient, balanceOf(self, address(this)));\\n    }\\n\\n    /**\\n     * @notice Transfers `amount` tokens from the caller to the `recipient`\\n     * @param self Token to transfer\\n     * @param recipient Address to transfer tokens to\\n     * @param amount Amount of tokens to transfer\\n     */\\n    function push(Token self, address recipient, UFixed18 amount) internal {\\n        isEther(self)\\n            ? Address.sendValue(payable(recipient), UFixed18.unwrap(amount))\\n            : IERC20(Token.unwrap(self)).safeTransfer(recipient, toTokenAmount(self, amount, false));\\n    }\\n\\n    /**\\n     * @notice Transfers `amount` tokens from the caller to the `recipient`\\n     * @param self Token to transfer\\n     * @param recipient Address to transfer tokens to\\n     * @param amount Amount of tokens to transfer\\n     * @param roundUp Whether to round decimal token amount up to the next unit\\n     */\\n    function push(Token self, address recipient, UFixed18 amount, bool roundUp) internal {\\n        isEther(self)\\n            ? Address.sendValue(payable(recipient), UFixed18.unwrap(amount))\\n            : IERC20(Token.unwrap(self)).safeTransfer(recipient, toTokenAmount(self, amount, roundUp));\\n    }\\n\\n    /**\\n     * @notice Transfers `amount` tokens from the `benefactor` to the caller\\n     * @dev Reverts if trying to pull Ether\\n     * @param self Token to transfer\\n     * @param benefactor Address to transfer tokens from\\n     * @param amount Amount of tokens to transfer\\n     */\\n    function pull(Token self, address benefactor, UFixed18 amount) internal {\\n        if (isEther(self)) revert TokenPullEtherError();\\n        IERC20(Token.unwrap(self)).safeTransferFrom(benefactor, address(this), toTokenAmount(self, amount, false));\\n    }\\n\\n    /**\\n     * @notice Transfers `amount` tokens from the `benefactor` to the caller\\n     * @dev Reverts if trying to pull Ether\\n     * @param self Token to transfer\\n     * @param benefactor Address to transfer tokens from\\n     * @param amount Amount of tokens to transfer\\n     * @param roundUp Whether to round decimal token amount up to the next unit\\n     */\\n    function pull(Token self, address benefactor, UFixed18 amount, bool roundUp) internal {\\n        if (isEther(self)) revert TokenPullEtherError();\\n        IERC20(Token.unwrap(self)).safeTransferFrom(benefactor, address(this), toTokenAmount(self, amount, roundUp));\\n    }\\n\\n    /**\\n     * @notice Transfers `amount` tokens from the `benefactor` to `recipient`\\n     * @dev Reverts if trying to pull Ether\\n     * @param self Token to transfer\\n     * @param benefactor Address to transfer tokens from\\n     * @param recipient Address to transfer tokens to\\n     * @param amount Amount of tokens to transfer\\n     */\\n    function pullTo(Token self, address benefactor, address recipient, UFixed18 amount) internal {\\n        if (isEther(self)) revert TokenPullEtherError();\\n        IERC20(Token.unwrap(self)).safeTransferFrom(benefactor, recipient, toTokenAmount(self, amount, false));\\n    }\\n\\n    /**\\n     * @notice Transfers `amount` tokens from the `benefactor` to `recipient`\\n     * @dev Reverts if trying to pull Ether\\n     * @param self Token to transfer\\n     * @param benefactor Address to transfer tokens from\\n     * @param recipient Address to transfer tokens to\\n     * @param amount Amount of tokens to transfer\\n     * @param roundUp Whether to round decimal token amount up to the next unit\\n     */\\n    function pullTo(Token self, address benefactor, address recipient, UFixed18 amount, bool roundUp) internal {\\n        if (isEther(self)) revert TokenPullEtherError();\\n        IERC20(Token.unwrap(self)).safeTransferFrom(benefactor, recipient, toTokenAmount(self, amount, roundUp));\\n    }\\n\\n    /**\\n     * @notice Returns the name of the token\\n     * @param self Token to check for\\n     * @return Token name\\n     */\\n    function name(Token self) internal view returns (string memory) {\\n        return isEther(self) ? \\\"Ether\\\" : IERC20Metadata(Token.unwrap(self)).name();\\n    }\\n\\n    /**\\n     * @notice Returns the symbol of the token\\n     * @param self Token to check for\\n     * @return Token symbol\\n     */\\n    function symbol(Token self) internal view returns (string memory) {\\n        return isEther(self) ? \\\"ETH\\\" : IERC20Metadata(Token.unwrap(self)).symbol();\\n    }\\n\\n    /**\\n     * @notice Returns the decimals of the token\\n     * @param self Token to check for\\n     * @return Token decimals\\n     */\\n    function decimals(Token self) internal view returns (uint256) {\\n        return isEther(self) ? 18 : uint256(IERC20Metadata(Token.unwrap(self)).decimals());\\n    }\\n\\n    /**\\n     * @notice Returns the `self` token balance of the caller\\n     * @param self Token to check for\\n     * @return Token balance of the caller\\n     */\\n    function balanceOf(Token self) internal view returns (UFixed18) {\\n        return balanceOf(self, address(this));\\n    }\\n\\n    /**\\n     * @notice Returns the `self` token balance of `account`\\n     * @param self Token to check for\\n     * @param account Account to check\\n     * @return Token balance of the account\\n     */\\n    function balanceOf(Token self, address account) internal view returns (UFixed18) {\\n        return isEther(self) ?\\n            UFixed18.wrap(account.balance) :\\n            fromTokenAmount(self, IERC20(Token.unwrap(self)).balanceOf(account));\\n    }\\n\\n    /**\\n     * @notice Converts the unsigned fixed-decimal amount into the token amount according to\\n     *         it's defined decimals\\n     * @param self Token to check for\\n     * @param amount Amount to convert\\n     * @return Normalized token amount\\n     */\\n    function toTokenAmount(Token self, UFixed18 amount, bool roundUp) private view returns (uint256) {\\n        uint256 tokenDecimals = decimals(self);\\n\\n        if (tokenDecimals < 18) {\\n            uint256 offset = 10 ** (18 - tokenDecimals);\\n            return roundUp ? Math.ceilDiv(UFixed18.unwrap(amount), offset) : UFixed18.unwrap(amount) / offset;\\n        } else {\\n            uint256 offset = 10 ** (tokenDecimals - 18);\\n            return UFixed18.unwrap(amount) * offset;\\n        }\\n    }\\n\\n    /**\\n     * @notice Converts the token amount into the unsigned fixed-decimal amount according to\\n     *         it's defined decimals\\n     * @param self Token to check for\\n     * @param amount Token amount to convert\\n     * @return Normalized unsigned fixed-decimal amount\\n     */\\n    function fromTokenAmount(Token self, uint256 amount) private view returns (UFixed18) {\\n        UFixed18 conversion = UFixed18Lib.ratio(BASE, 10 ** uint256(decimals(self)));\\n        return UFixed18.wrap(amount).mul(conversion);\\n    }\\n}\\n\\nlibrary TokenStorageLib {\\n    function read(TokenStorage self) internal view returns (Token value) {\\n        assembly {\\n            value := sload(self)\\n        }\\n    }\\n\\n    function store(TokenStorage self, Token value) internal {\\n        assembly {\\n            sstore(self, value)\\n        }\\n    }\\n}\",\"keccak256\":\"0x537a15969c9c094fdda69c6c9405e68403c4a12dc94c25196c7222fca563fe2a\",\"license\":\"Apache-2.0\"},\"@equilibria/root/token/types/Token18.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.13;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"../../number/types/UFixed18.sol\\\";\\n\\n/// @dev Token18\\ntype Token18 is address;\\nusing Token18Lib for Token18 global;\\ntype Token18Storage is bytes32;\\nusing Token18StorageLib for Token18Storage global;\\n\\n/**\\n * @title Token18Lib\\n * @notice Library to manage 18-decimal ERC20s that is compliant with the fixed-decimal types.\\n * @dev Maintains significant gas savings over other Token implementations since no conversion take place\\n */\\nlibrary Token18Lib {\\n    using SafeERC20 for IERC20;\\n\\n    uint256 private constant DECIMALS = 18;\\n\\n    /**\\n     * @notice Approves `grantee` to spend infinite tokens from the caller\\n     * @param self Token to transfer\\n     * @param grantee Address to allow spending\\n     */\\n    function approve(Token18 self, address grantee) internal {\\n        IERC20(Token18.unwrap(self)).safeApprove(grantee, type(uint256).max);\\n    }\\n\\n    /**\\n     * @notice Approves `grantee` to spend `amount` tokens from the caller\\n     * @param self Token to transfer\\n     * @param grantee Address to allow spending\\n     * @param amount Amount of tokens to approve to spend\\n     */\\n    function approve(Token18 self, address grantee, UFixed18 amount) internal {\\n        IERC20(Token18.unwrap(self)).safeApprove(grantee, UFixed18.unwrap(amount));\\n    }\\n\\n    /**\\n     * @notice Transfers all held tokens from the caller to the `recipient`\\n     * @param self Token to transfer\\n     * @param recipient Address to receive the tokens\\n     */\\n    function push(Token18 self, address recipient) internal {\\n        push(self, recipient, balanceOf(self, address(this)));\\n    }\\n\\n    /**\\n     * @notice Transfers `amount` tokens from the caller to the `recipient`\\n     * @param self Token to transfer\\n     * @param recipient Address to transfer tokens to\\n     * @param amount Amount of tokens to transfer\\n     */\\n    function push(Token18 self, address recipient, UFixed18 amount) internal {\\n        IERC20(Token18.unwrap(self)).safeTransfer(recipient, UFixed18.unwrap(amount));\\n    }\\n\\n    /**\\n     * @notice Transfers `amount` tokens from the `benefactor` to the caller\\n     * @dev Reverts if trying to pull Ether\\n     * @param self Token to transfer\\n     * @param benefactor Address to transfer tokens from\\n     * @param amount Amount of tokens to transfer\\n     */\\n    function pull(Token18 self, address benefactor, UFixed18 amount) internal {\\n        IERC20(Token18.unwrap(self)).safeTransferFrom(benefactor, address(this), UFixed18.unwrap(amount));\\n    }\\n\\n    /**\\n     * @notice Transfers `amount` tokens from the `benefactor` to `recipient`\\n     * @dev Reverts if trying to pull Ether\\n     * @param self Token to transfer\\n     * @param benefactor Address to transfer tokens from\\n     * @param recipient Address to transfer tokens to\\n     * @param amount Amount of tokens to transfer\\n     */\\n    function pullTo(Token18 self, address benefactor, address recipient, UFixed18 amount) internal {\\n        IERC20(Token18.unwrap(self)).safeTransferFrom(benefactor, recipient, UFixed18.unwrap(amount));\\n    }\\n\\n    /**\\n     * @notice Returns the name of the token\\n     * @param self Token to check for\\n     * @return Token name\\n     */\\n    function name(Token18 self) internal view returns (string memory) {\\n        return IERC20Metadata(Token18.unwrap(self)).name();\\n    }\\n\\n    /**\\n     * @notice Returns the symbol of the token\\n     * @param self Token to check for\\n     * @return Token symbol\\n     */\\n    function symbol(Token18 self) internal view returns (string memory) {\\n        return IERC20Metadata(Token18.unwrap(self)).symbol();\\n    }\\n\\n    /**\\n     * @notice Returns the decimals of the token\\n     * @return Token decimals\\n     */\\n    function decimals(Token18) internal pure returns (uint256) {\\n        return DECIMALS;\\n    }\\n\\n    /**\\n     * @notice Returns the `self` token balance of the caller\\n     * @param self Token to check for\\n     * @return Token balance of the caller\\n     */\\n    function balanceOf(Token18 self) internal view returns (UFixed18) {\\n        return balanceOf(self, address(this));\\n    }\\n\\n    /**\\n     * @notice Returns the `self` token balance of `account`\\n     * @param self Token to check for\\n     * @param account Account to check\\n     * @return Token balance of the account\\n     */\\n    function balanceOf(Token18 self, address account) internal view returns (UFixed18) {\\n        return UFixed18.wrap(IERC20(Token18.unwrap(self)).balanceOf(account));\\n    }\\n}\\n\\nlibrary Token18StorageLib {\\n    function read(Token18Storage self) internal view returns (Token18 value) {\\n        assembly {\\n            value := sload(self)\\n        }\\n    }\\n\\n    function store(Token18Storage self, Token18 value) internal {\\n        assembly {\\n            sstore(self, value)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2803297fd08ae91f94b928bcaa34273d792891a2d4c8ed43b01be580669e8ee3\",\"license\":\"Apache-2.0\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n *\\n * @custom:oz-upgrades-unsafe-allow delegatecall\\n */\\nabstract contract ERC1967Upgrade {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Emitted when the beacon is upgraded.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(\\n        address newBeacon,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internall call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overriden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0x0edeb16b9821ae2b16e9d69c383b38d3ad2fbb3e0c06cf809a0786d96e602551\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/BeaconProxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IBeacon.sol\\\";\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"../ERC1967/ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements a proxy that gets the implementation address for each call from a {UpgradeableBeacon}.\\n *\\n * The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't\\n * conflict with the storage layout of the implementation behind the proxy.\\n *\\n * _Available since v3.4._\\n */\\ncontract BeaconProxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the proxy with `beacon`.\\n     *\\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\\n     * will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity\\n     * constructor.\\n     *\\n     * Requirements:\\n     *\\n     * - `beacon` must be a contract with the interface {IBeacon}.\\n     */\\n    constructor(address beacon, bytes memory data) payable {\\n        assert(_BEACON_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.beacon\\\")) - 1));\\n        _upgradeBeaconToAndCall(beacon, data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current beacon address.\\n     */\\n    function _beacon() internal view virtual returns (address) {\\n        return _getBeacon();\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address of the associated beacon.\\n     */\\n    function _implementation() internal view virtual override returns (address) {\\n        return IBeacon(_getBeacon()).implementation();\\n    }\\n\\n    /**\\n     * @dev Changes the proxy to use a new beacon. Deprecated: see {_upgradeBeaconToAndCall}.\\n     *\\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon.\\n     *\\n     * Requirements:\\n     *\\n     * - `beacon` must be a contract.\\n     * - The implementation returned by `beacon` must be a contract.\\n     */\\n    function _setBeacon(address beacon, bytes memory data) internal virtual {\\n        _upgradeBeaconToAndCall(beacon, data, false);\\n    }\\n}\\n\",\"keccak256\":\"0x54878f0d2f40b5e13f84977bcd3c71d4c38581414e7efb4909cb16dd3ace392f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xfe1b7a9aa2a530a9e705b220e26cd584e2fbdc9602a3a1066032b12816b46aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a >= b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a / b + (a % b == 0 ? 0 : 1);\\n    }\\n}\\n\",\"keccak256\":\"0xc995bddbca1ae19788db9f8b61e63385edd3fddf89693b612d5abd1a275974d2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a >= b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xb3ebde1c8d27576db912d87c3560dab14adfb9cd001be95890ec4ba035e652e7\",\"license\":\"MIT\"},\"contracts/controller/Controller.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.13;\\n\\nimport \\\"@equilibria/root/control/unstructured/UInitializable.sol\\\";\\nimport \\\"@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol\\\";\\nimport \\\"../interfaces/IController.sol\\\";\\nimport \\\"../interfaces/ICollateral.sol\\\";\\nimport \\\"../interfaces/IIncentivizer.sol\\\";\\nimport \\\"../interfaces/IProduct.sol\\\";\\n\\n/**\\n * @title Controller\\n * @notice Manages creating new products and global protocol parameters.\\n */\\ncontract Controller is IController, UInitializable {\\n    /// @dev Collateral contract address for the protocol\\n    ICollateral public collateral;\\n\\n    /// @dev Incentivizer contract address for the protocol\\n    IIncentivizer public incentivizer;\\n\\n    /// @dev Product implementation beacon address for the protocol\\n    IBeacon public productBeacon;\\n\\n    /// @dev List of product coordinators\\n    Coordinator[] private _coordinators;\\n\\n    /// @dev Mapping of the coordinator for each  product\\n    mapping(IProduct => uint256) public coordinatorFor;\\n\\n    /// @dev Whether a specific coordinator is allowed to create a new product\\n    mapping(uint256 => bool) public allowed;\\n\\n    /// @dev Percent of collected fees that go to the protocol treasury vs the product treasury\\n    UFixed18 public protocolFee;\\n\\n    /// @dev Minimum allowable funding fee for a product\\n    UFixed18 public minFundingFee;\\n\\n    /// @dev Fee on maintenance for liquidation\\n    UFixed18 public liquidationFee;\\n\\n    /// @dev Fee on incentivization programs\\n    UFixed18 public incentivizationFee;\\n\\n    /// @dev Minimum allowable collateral amount per user account\\n    UFixed18 public minCollateral;\\n\\n    /// @dev Maximum incentivization programs per product allowed\\n    uint256 public programsPerProduct;\\n\\n    /**\\n     * @notice Initializes the contract state\\n     * @dev Must be called atomically as part of the upgradeable proxy deployment to\\n     *      avoid front-running\\n     * @param collateral_ Collateral contract address\\n     * @param incentivizer_ Incentivizer contract address\\n     * @param productBeacon_ Product implementation beacon address\\n     */\\n    function initialize(\\n        ICollateral collateral_,\\n        IIncentivizer incentivizer_,\\n        IBeacon productBeacon_\\n    ) external initializer(1) {\\n        createCoordinator();\\n\\n        updateCollateral(collateral_);\\n        updateIncentivizer(incentivizer_);\\n        updateProductBeacon(productBeacon_);\\n    }\\n\\n    /**\\n     * @notice Creates a new coordinator with `msg.sender` as the owner\\n     * @dev `treasury` and `pauser` initialize as the 0-address, defaulting to the `owner`\\n     * @return New coordinator ID\\n     */\\n    function createCoordinator() public returns (uint256) {\\n        uint256 coordinatorId = _coordinators.length;\\n\\n        _coordinators.push(Coordinator({\\n            pendingOwner: address(0),\\n            owner: msg.sender,\\n            treasury: address(0),\\n            pauser: address(0),\\n            paused: false\\n        }));\\n\\n        emit CoordinatorCreated(coordinatorId, msg.sender);\\n\\n        return coordinatorId;\\n    }\\n\\n    /**\\n     * @notice Updates the pending owner of an existing coordinator\\n     * @dev Must be called by the coordinator's current owner\\n     * @param coordinatorId Coordinator to update\\n     * @param newPendingOwner New pending owner address\\n     */\\n    function updateCoordinatorPendingOwner(uint256 coordinatorId, address newPendingOwner) external onlyOwner(coordinatorId) {\\n        _coordinators[coordinatorId].pendingOwner = newPendingOwner;\\n        emit CoordinatorPendingOwnerUpdated(coordinatorId, newPendingOwner);\\n    }\\n\\n    /**\\n     * @notice Accepts ownership over an existing coordinator\\n     * @dev Must be called by the coordinator's pending owner\\n     * @param coordinatorId Coordinator to update\\n     */\\n    function acceptCoordinatorOwner(uint256 coordinatorId) external {\\n        Coordinator storage coordinator = _coordinators[coordinatorId];\\n        address newPendingOwner = coordinator.pendingOwner;\\n\\n        if (msg.sender != newPendingOwner) revert ControllerNotPendingOwnerError(coordinatorId);\\n\\n        coordinator.pendingOwner = address(0);\\n        coordinator.owner = newPendingOwner;\\n        emit CoordinatorOwnerUpdated(coordinatorId, newPendingOwner);\\n    }\\n\\n    /**\\n     * @notice Updates the treasury of an existing coordinator\\n     * @dev Must be called by the coordinator's current owner\\n     * @param coordinatorId Coordinator to update\\n     * @param newTreasury New treasury address\\n     */\\n    function updateCoordinatorTreasury(uint256 coordinatorId, address newTreasury) external onlyOwner(coordinatorId) {\\n        _coordinators[coordinatorId].treasury = newTreasury;\\n        emit CoordinatorTreasuryUpdated(coordinatorId, newTreasury);\\n    }\\n\\n    /**\\n     * @notice Updates the pauser of an existing coordinator\\n     * @dev Must be called by the coordinator's current owner\\n     * @param coordinatorId Coordinator to update\\n     * @param newPauser New pauser address\\n     */\\n    function updateCoordinatorPauser(uint256 coordinatorId, address newPauser) external onlyOwner(coordinatorId) {\\n        _coordinators[coordinatorId].pauser = newPauser;\\n        emit CoordinatorPauserUpdated(coordinatorId, newPauser);\\n    }\\n\\n    /**\\n     * @notice Updates the paused status of an existing coordinator\\n     * @dev Must be called by the coordinator's current owner\\n     * @param coordinatorId Coordinator to update\\n     * @param newPaused New paused status\\n     */\\n    function updateCoordinatorPaused(uint256 coordinatorId, bool newPaused) external onlyPauser(coordinatorId) {\\n        _coordinators[coordinatorId].paused = newPaused;\\n        emit CoordinatorPausedUpdated(coordinatorId, newPaused);\\n    }\\n\\n    /**\\n     * @notice Creates a new product market with `provider`\\n     * @dev Coordinator caller must be allowed\\n     * @param coordinatorId Coordinator that will own the product\\n     * @param provider Provider that will service the market\\n     * @return New product contract address\\n     */\\n    function createProduct(uint256 coordinatorId, IProductProvider provider) external onlyOwner(coordinatorId) returns (IProduct) {\\n        if (coordinatorId == 0) revert ControllerNoZeroCoordinatorError();\\n        if (!allowed[0] && !allowed[coordinatorId]) revert ControllerNotAllowedError();\\n\\n        BeaconProxy newProductProxy = new BeaconProxy(address(productBeacon), \\\"\\\");\\n        IProduct newProduct = IProduct(address(newProductProxy));\\n        newProduct.initialize(provider);\\n        coordinatorFor[newProduct] = coordinatorId;\\n        emit ProductCreated(newProduct, provider);\\n\\n        return newProduct;\\n    }\\n\\n    /**\\n     * @notice Updates the Collateral contract address\\n     * @param newCollateral New Collateral contract address\\n     */\\n    function updateCollateral(ICollateral newCollateral) public onlyOwner(0) {\\n        collateral = newCollateral;\\n        emit CollateralUpdated(newCollateral);\\n    }\\n\\n    /**\\n     * @notice Updates the Incentivizer contract address\\n     * @param newIncentivizer New Incentivizer contract address\\n     */\\n    function updateIncentivizer(IIncentivizer newIncentivizer) public onlyOwner(0) {\\n        incentivizer = newIncentivizer;\\n        emit IncentivizerUpdated(newIncentivizer);\\n    }\\n\\n    /**\\n     * @notice Updates the Product implementation beacon address\\n     * @param newProductBeacon New Product implementation beacon address\\n     */\\n    function updateProductBeacon(IBeacon newProductBeacon) public onlyOwner(0) {\\n        productBeacon = newProductBeacon;\\n        emit ProductBeaconUpdated(newProductBeacon);\\n    }\\n\\n    /**\\n     * @notice Updates the protocol-product fee split\\n     * @param newProtocolFee New protocol-product fee split\\n     */\\n    function updateProtocolFee(UFixed18 newProtocolFee) public onlyOwner(0) {\\n        if (newProtocolFee.gt(UFixed18Lib.ONE)) revert ControllerInvalidProtocolFeeError();\\n\\n        protocolFee = newProtocolFee;\\n        emit ProtocolFeeUpdated(newProtocolFee);\\n    }\\n\\n    /**\\n     * @notice Updates the minimum allowed funding fee\\n     * @param newMinFundingFee New minimum allowed funding fee\\n     */\\n    function updateMinFundingFee(UFixed18 newMinFundingFee) public onlyOwner(0) {\\n        if (newMinFundingFee.gt(UFixed18Lib.ONE)) revert ControllerInvalidMinFundingFeeError();\\n\\n        minFundingFee = newMinFundingFee;\\n        emit MinFundingFeeUpdated(newMinFundingFee);\\n    }\\n\\n    /**\\n     * @notice Updates the liquidation fee\\n     * @param newLiquidationFee New liquidation fee\\n     */\\n    function updateLiquidationFee(UFixed18 newLiquidationFee) public onlyOwner(0) {\\n        if (newLiquidationFee.gt(UFixed18Lib.ONE)) revert ControllerInvalidLiquidationFeeError();\\n\\n        liquidationFee = newLiquidationFee;\\n        emit LiquidationFeeUpdated(newLiquidationFee);\\n    }\\n\\n    /**\\n     * @notice Updates the incentivization fee\\n     * @param newIncentivizationFee New incentivization fee\\n     */\\n    function updateIncentivizationFee(UFixed18 newIncentivizationFee) public onlyOwner(0) {\\n        if (newIncentivizationFee.gt(UFixed18Lib.ONE)) revert ControllerInvalidIncentivizationFeeError();\\n\\n        incentivizationFee = newIncentivizationFee;\\n        emit IncentivizationFeeUpdated(newIncentivizationFee);\\n    }\\n\\n    /**\\n     * @notice Updates the minimum allowed collateral amount per user account\\n     * @param newMinCollateral New minimum allowed collateral amount\\n     */\\n    function updateMinCollateral(UFixed18 newMinCollateral) public onlyOwner(0) {\\n        minCollateral = newMinCollateral;\\n        emit MinCollateralUpdated(newMinCollateral);\\n    }\\n\\n    /**\\n     * @notice Updates the maximum incentivization programs per product allowed\\n     * @param newProgramsPerProduct New maximum incentivization programs per product allowed\\n     */\\n    function updateProgramsPerProduct(uint256 newProgramsPerProduct) public onlyOwner(0) {\\n        programsPerProduct = newProgramsPerProduct;\\n        emit ProgramsPerProductUpdated(newProgramsPerProduct);\\n    }\\n\\n    /**\\n     * @notice Updates whether `coordinatorId` is allowed to create new products\\n     * @param coordinatorId Coordinator to update\\n     * @param newAllowed New allowed status for `coordinatorId`\\n     */\\n    function updateAllowed(uint256 coordinatorId, bool newAllowed) external onlyOwner(0) {\\n        allowed[coordinatorId] = newAllowed;\\n        emit AllowedUpdated(coordinatorId, newAllowed);\\n    }\\n\\n    /**\\n     * @notice Returns whether a contract is a product\\n     * @param product Contract address to check\\n     * @return Whether a contract is a product\\n     */\\n    function isProduct(IProduct product) external view returns (bool) {\\n        return coordinatorFor[product] != 0;\\n    }\\n\\n    /**\\n     * @notice Returns coordinator state for coordinator `coordinatorId`\\n     * @param coordinatorId Coordinator to return for\\n     * @return Coordinator state\\n     */\\n    function coordinators(uint256 coordinatorId) external view returns (Coordinator memory) {\\n        return _coordinators[coordinatorId];\\n    }\\n\\n    /**\\n     * @notice Returns the pending owner of the protocol\\n     * @return Owner of the protocol\\n     */\\n    function pendingOwner() public view returns (address) {\\n        return pendingOwner(0);\\n    }\\n\\n    /**\\n     * @notice Returns the pending owner of the coordinator `coordinatorId`\\n     * @param coordinatorId Coordinator to return for\\n     * @return Pending owner of the coordinator\\n     */\\n    function pendingOwner(uint256 coordinatorId) public view returns (address) {\\n        return _coordinators[coordinatorId].pendingOwner;\\n    }\\n\\n    /**\\n     * @notice Returns the owner of the protocol\\n     * @return Owner of the protocol\\n     */\\n    function owner() public view returns (address) {\\n        return owner(0);\\n    }\\n\\n    /**\\n     * @notice Returns the owner of the coordinator `coordinatorId`\\n     * @param coordinatorId Coordinator to return for\\n     * @return Owner of the coordinator\\n     */\\n    function owner(uint256 coordinatorId) public view returns (address) {\\n        return _coordinators[coordinatorId].owner;\\n    }\\n\\n    /**\\n     * @notice Returns the owner of the product `product`\\n     * @param product Product to return for\\n     * @return Owner of the product\\n     */\\n    function owner(IProduct product) external view returns (address) {\\n        return owner(coordinatorFor[product]);\\n    }\\n\\n    /**\\n     * @notice Returns the treasury of the protocol\\n     * @dev Defaults to the `owner` when `treasury` is unset\\n     * @return Treasury of the protocol\\n     */\\n    function treasury() external view returns (address) {\\n        return treasury(0);\\n    }\\n\\n    /**\\n     * @notice Returns the treasury of the coordinator `coordinatorId`\\n     * @dev Defaults to the `owner` when `treasury` is unset\\n     * @param coordinatorId Coordinator to return for\\n     * @return Treasury of the coordinator\\n     */\\n    function treasury(uint256 coordinatorId) public view returns (address) {\\n        address _treasury = _coordinators[coordinatorId].treasury;\\n        return _treasury == address(0) ? owner(coordinatorId) : _treasury;\\n    }\\n\\n    /**\\n     * @notice Returns the treasury of the product `product`\\n     * @dev Defaults to the `owner` when `treasury` is unset\\n     * @param product Product to return for\\n     * @return Treasury of the product\\n     */\\n    function treasury(IProduct product) external view returns (address) {\\n        return treasury(coordinatorFor[product]);\\n    }\\n\\n    /**\\n     * @notice Returns the pauser of the protocol\\n     * @dev Defaults to the `owner` when `pauser` is unset\\n     * @return Pauser of the protocol\\n     */\\n    function pauser() external view returns (address) {\\n        return pauser(0);\\n    }\\n\\n    /**\\n     * @notice Returns the pauser of the coordinator `coordinatorId`\\n     * @dev Defaults to the `owner` when `pauser` is unset\\n     * @param coordinatorId Coordinator to return for\\n     * @return Pauser of the coordinator\\n     */\\n    function pauser(uint256 coordinatorId) public view returns (address) {\\n        address _pauser = _coordinators[coordinatorId].pauser;\\n        return _pauser == address(0) ? owner(coordinatorId) : _pauser;\\n    }\\n\\n    /**\\n     * @notice Returns the pauser of the product `product`\\n     * @dev Defaults to the `owner` when `pauser` is unset\\n     * @param product Product to return for\\n     * @return Pauser of the product\\n     */\\n    function pauser(IProduct product) external view returns (address) {\\n        return pauser(coordinatorFor[product]);\\n    }\\n\\n    /**\\n     * @notice Returns the paused status of the protocol\\n     * @return Paused status of the protocol\\n     */\\n    function paused() public view returns (bool) {\\n        return _coordinators[0].paused;\\n    }\\n\\n    /**\\n     * @notice Returns the paused status of the coordinator `coordinatorId`\\n     * @param coordinatorId Coordinator to return for\\n     * @return Paused status of the coordinator\\n     */\\n    function paused(uint256 coordinatorId) public view returns (bool) {\\n        return paused() || _coordinators[coordinatorId].paused;\\n    }\\n\\n    /**\\n     * @notice Returns the paused status of the product `product`\\n     * @param product Product to return for\\n     * @return Paused status of the product\\n     */\\n    function paused(IProduct product) external view returns (bool) {\\n        return paused(coordinatorFor[product]);\\n    }\\n\\n    // @dev Only allow owner of `coordinatorId` to call\\n    modifier onlyOwner(uint256 coordinatorId) {\\n        if (msg.sender != owner(coordinatorId)) revert ControllerNotOwnerError(coordinatorId);\\n\\n        _;\\n    }\\n\\n    // @dev Only pauser owner of `coordinatorId` to call\\n    modifier onlyPauser(uint256 coordinatorId) {\\n        if (msg.sender != pauser(coordinatorId)) revert ControllerNotPauserError(coordinatorId);\\n\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xaae2b72c9781613934ae1f354453b8b39d71931ac83603477f181d982cdd9262\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/ICollateral.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.13;\\n\\nimport \\\"@equilibria/root/number/types/UFixed18.sol\\\";\\nimport \\\"@equilibria/root/number/types/Fixed18.sol\\\";\\nimport \\\"@equilibria/root/token/types/Token18.sol\\\";\\nimport \\\"./IController.sol\\\";\\nimport \\\"./IProduct.sol\\\";\\n\\ninterface ICollateral {\\n    event Deposit(address indexed user, IProduct indexed product, UFixed18 amount);\\n    event Withdrawal(address indexed user, IProduct indexed product, UFixed18 amount);\\n    event AccountSettle(IProduct indexed product, address indexed account, Fixed18 amount, UFixed18 newShortfall);\\n    event ProductSettle(IProduct indexed product, UFixed18 protocolFee, UFixed18 productFee);\\n    event Liquidation(address indexed user, IProduct indexed product, address liquidator, UFixed18 fee);\\n    event ShortfallResolution(IProduct indexed product, UFixed18 amount);\\n    event FeeClaim(address indexed account, UFixed18 amount);\\n\\n    error CollateralCantLiquidate(UFixed18 totalMaintenance, UFixed18 totalCollateral);\\n    error CollateralInsufficientCollateralError();\\n    error CollateralUnderLimitError();\\n    error CollateralZeroAddressError();\\n\\n    function token() external view returns (Token18);\\n    function fees(address account) external view returns (UFixed18);\\n    function initialize(IController controller_) external;\\n    function depositTo(address account, IProduct product, UFixed18 amount) external;\\n    function withdrawTo(address account, IProduct product, UFixed18 amount) external;\\n    function liquidate(address account, IProduct product) external;\\n    function settleAccount(address account, Fixed18 amount) external;\\n    function settleProduct(UFixed18 amount) external;\\n    function collateral(address account, IProduct product) external view returns (UFixed18);\\n    function collateral(IProduct product) external view returns (UFixed18);\\n    function shortfall(IProduct product) external view returns (UFixed18);\\n    function liquidatable(address account, IProduct product) external view returns (bool);\\n    function liquidatableNext(address account, IProduct product) external view returns (bool);\\n    function resolveShortfall(IProduct product, UFixed18 amount) external;\\n    function claimFee() external;\\n}\\n\",\"keccak256\":\"0x5411fbe8f10eeb3d1a2fdf3ad4ce16a13d4bd889c737abd40cd3ebc4eb90cfff\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/IController.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.13;\\n\\nimport \\\"@equilibria/root/number/types/UFixed18.sol\\\";\\nimport \\\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\\\";\\nimport \\\"./ICollateral.sol\\\";\\nimport \\\"./IIncentivizer.sol\\\";\\nimport \\\"./IProduct.sol\\\";\\nimport \\\"./IProductProvider.sol\\\";\\n\\ninterface IController {\\n    /// @dev Coordinator of a one or many products\\n    struct Coordinator {\\n        /// @dev Pending owner of the product, can accept ownership\\n        address pendingOwner;\\n\\n        /// @dev Owner of the product, allowed to update select parameters\\n        address owner;\\n\\n        /// @dev Treasury of the product, collects fees\\n        address treasury;\\n\\n        /// @dev the address that is allowed to pause the coordinated products (0-address defaults to owner)\\n        address pauser;\\n\\n        /// @dev Whether the coordinated products are paused\\n        bool paused;\\n    }\\n\\n    event CollateralUpdated(ICollateral newCollateral);\\n    event IncentivizerUpdated(IIncentivizer newIncentivizer);\\n    event ProductBeaconUpdated(IBeacon newProductBeacon);\\n    event ProtocolFeeUpdated(UFixed18 newProtocolFee);\\n    event MinFundingFeeUpdated(UFixed18 newMinFundingFee);\\n    event LiquidationFeeUpdated(UFixed18 newLiquidationFee);\\n    event IncentivizationFeeUpdated(UFixed18 newIncentivizationFee);\\n    event MinCollateralUpdated(UFixed18 newMinCollateral);\\n    event ProgramsPerProductUpdated(uint256 newProgramsPerProduct);\\n    event CoordinatorPendingOwnerUpdated(uint256 indexed coordinatorId, address newPendingOwner);\\n    event CoordinatorOwnerUpdated(uint256 indexed coordinatorId, address newOwner);\\n    event CoordinatorTreasuryUpdated(uint256 indexed coordinatorId, address newTreasury);\\n    event CoordinatorPauserUpdated(uint256 indexed coordinatorId, address pauser);\\n    event CoordinatorPausedUpdated(uint256 indexed coordinatorId, bool paused);\\n    event AllowedUpdated(uint256 indexed coordinatorId, bool allowed);\\n    event CoordinatorCreated(uint256 indexed coordinatorId, address owner);\\n    event ProductCreated(IProduct indexed product, IProductProvider provider);\\n\\n    error ControllerAlreadyInitializedError();\\n    error ControllerNoZeroCoordinatorError();\\n    error ControllerNotAllowedError();\\n    error ControllerNotPauserError(uint256 coordinatorId);\\n    error ControllerNotOwnerError(uint256 controllerId);\\n    error ControllerNotPendingOwnerError(uint256 controllerId);\\n    error ControllerInvalidProtocolFeeError();\\n    error ControllerInvalidMinFundingFeeError();\\n    error ControllerInvalidLiquidationFeeError();\\n    error ControllerInvalidIncentivizationFeeError();\\n\\n    function collateral() external view returns (ICollateral);\\n    function incentivizer() external view returns (IIncentivizer);\\n    function productBeacon() external view returns (IBeacon);\\n    function coordinators(uint256 collateralId) external view returns (Coordinator memory);\\n    function coordinatorFor(IProduct product) external view returns (uint256);\\n    function allowed(uint256 collateralId) external view returns (bool);\\n    function protocolFee() external view returns (UFixed18);\\n    function minFundingFee() external view returns (UFixed18);\\n    function liquidationFee() external view returns (UFixed18);\\n    function incentivizationFee() external view returns (UFixed18);\\n    function minCollateral() external view returns (UFixed18);\\n    function programsPerProduct() external view returns (uint256);\\n    function initialize(ICollateral collateral_, IIncentivizer incentivizer_, IBeacon productBeacon_) external;\\n    function createCoordinator() external returns (uint256);\\n    function updateCoordinatorPendingOwner(uint256 coordinatorId, address newPendingOwner) external;\\n    function acceptCoordinatorOwner(uint256 coordinatorId) external;\\n    function updateCoordinatorTreasury(uint256 coordinatorId, address newTreasury) external;\\n    function updateCoordinatorPauser(uint256 coordinatorId, address newPauser) external;\\n    function updateCoordinatorPaused(uint256 coordinatorId, bool newPaused) external;\\n    function createProduct(uint256 coordinatorId, IProductProvider provider) external returns (IProduct);\\n    function updateCollateral(ICollateral newCollateral) external;\\n    function updateIncentivizer(IIncentivizer newIncentivizer) external;\\n    function updateProductBeacon(IBeacon newProductBeacon) external;\\n    function updateProtocolFee(UFixed18 newProtocolFee) external;\\n    function updateMinFundingFee(UFixed18 newMinFundingFee) external;\\n    function updateLiquidationFee(UFixed18 newLiquidationFee) external;\\n    function updateIncentivizationFee(UFixed18 newIncentivizationFee) external;\\n    function updateMinCollateral(UFixed18 newMinCollateral) external;\\n    function updateProgramsPerProduct(uint256 newProductsPerProduct) external;\\n    function updateAllowed(uint256 coordinatorId, bool newAllowed) external;\\n    function isProduct(IProduct product) external view returns (bool);\\n    function owner() external view returns (address);\\n    function owner(uint256 coordinatorId) external view returns (address);\\n    function owner(IProduct product) external view returns (address);\\n    function treasury() external view returns (address);\\n    function treasury(uint256 coordinatorId) external view returns (address);\\n    function treasury(IProduct product) external view returns (address);\\n    function pauser() external view returns (address);\\n    function pauser(uint256 coordinatorId) external view returns (address);\\n    function pauser(IProduct product) external view returns (address);\\n    function paused() external view returns (bool);\\n    function paused(uint256 coordinatorId) external view returns (bool);\\n    function paused(IProduct product) external view returns (bool);\\n}\",\"keccak256\":\"0x79bc31fa1c607fdd8d53e162452b9b9a3ba232834b57a74779d306d496cf8c23\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/IIncentivizer.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.13;\\n\\nimport \\\"@equilibria/root/token/types/Token.sol\\\";\\nimport \\\"@equilibria/root/number/types/UFixed18.sol\\\";\\nimport \\\"./types/ProgramInfo.sol\\\";\\nimport \\\"./IOracleProvider.sol\\\";\\nimport \\\"./IController.sol\\\";\\nimport \\\"./IProduct.sol\\\";\\n\\ninterface IIncentivizer {\\n    event ProgramCompleted(uint256 indexed programId, uint256 versionComplete);\\n    event ProgramClosed(uint256 indexed programId, UFixed18 amount);\\n    event ProgramCreated(uint256 indexed programId, IProduct product, Token token, UFixed18 amountMaker, UFixed18 amountTaker, uint256 start, uint256 duration, uint256 grace, UFixed18 fee);\\n    event Claim(address indexed account, uint256 indexed programId, UFixed18 amount);\\n    event FeeClaim(Token indexed token, UFixed18 amount);\\n\\n    error IncentivizerProgramNotClosableError();\\n    error IncentivizerTooManyProgramsError();\\n    error IncentivizerProgramPausedError(address sender, uint256 programId);\\n    error IncentivizerNotProgramOwnerError(address sender, uint256 programId);\\n    error IncentivizerInvalidProgramError(uint256 programId);\\n\\n    function programInfos(uint256 programId) external view returns (ProgramInfo memory);\\n    function fees(Token token) external view returns (UFixed18);\\n    function initialize(IController controller_) external;\\n    function create(ProgramInfo calldata info) external returns (uint256);\\n    function end(uint256 programId) external;\\n    function close(uint256 programId) external;\\n    function sync(IOracleProvider.OracleVersion memory currentOracleVersion) external;\\n    function syncAccount(address account) external;\\n    function claim(IProduct product) external;\\n    function claim(uint256 programId) external;\\n    function claimFee(Token[] calldata tokens) external;\\n    function unclaimed(address account, uint256 programId) external view returns (UFixed18);\\n    function latestVersion(address account, uint256 programId) external view returns (uint256);\\n    function settled(address account, uint256 programId) external view returns (UFixed18);\\n    function available(uint256 programId) external view returns (UFixed18);\\n    function versionComplete(uint256 programId) external view returns (uint256);\\n    function closed(uint256 programId) external view returns (bool);\\n    function programsForLength(IProduct product) external view returns (uint256);\\n    function programsForAt(IProduct product, uint256 index) external view returns (uint256);\\n    function owner(uint256 programId) external view returns (address);\\n    function treasury(uint256 programId) external view returns (address);\\n}\",\"keccak256\":\"0xa8103111b857f81b34603bf9c59d48c366dcdebffc08610fd25507c6d54e1762\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/IOracleProvider.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.13;\\n\\nimport \\\"@equilibria/root/number/types/Fixed18.sol\\\";\\n\\ninterface IOracleProvider {\\n    /// @dev A singular oracle version with its corresponding data\\n    struct OracleVersion {\\n        /// @dev The iterative version\\n        uint256 version;\\n\\n        /// @dev the timestamp of the oracle update\\n        uint256 timestamp;\\n\\n        /// @dev The oracle price of the corresponding version\\n        Fixed18 price;\\n    }\\n\\n    function sync() external returns (OracleVersion memory);\\n    function currentVersion() external view returns (OracleVersion memory);\\n    function atVersion(uint256 oracleVersion) external view returns (OracleVersion memory);\\n}\\n\",\"keccak256\":\"0x22257e85b93c8224f06c093b195b610cc5da001bb3f8ad97bd0dbf6c0434b7ba\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/IProduct.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.13;\\n\\nimport \\\"@equilibria/root/number/types/UFixed18.sol\\\";\\nimport \\\"./types/Position.sol\\\";\\nimport \\\"./types/PrePosition.sol\\\";\\nimport \\\"./types/Accumulator.sol\\\";\\nimport \\\"./IProductProvider.sol\\\";\\n\\ninterface IProduct {\\n    event Settle(uint256 preVersion, uint256 toVersion);\\n    event AccountSettle(address indexed account, uint256 preVersion, uint256 toVersion);\\n    event MakeOpened(address indexed account, UFixed18 amount);\\n    event TakeOpened(address indexed account, UFixed18 amount);\\n    event MakeClosed(address indexed account, UFixed18 amount);\\n    event TakeClosed(address indexed account, UFixed18 amount);\\n\\n    error ProductInsufficientLiquidityError(UFixed18 socializationFactor);\\n    error ProductDoubleSidedError();\\n    error ProductOverClosedError();\\n    error ProductInsufficientCollateralError();\\n    error ProductInLiquidationError();\\n    error ProductMakerOverLimitError();\\n    error ProductOracleBootstrappingError();\\n\\n    function productProvider() external view returns (IProductProvider);\\n    function initialize(IProductProvider productProvider_) external;\\n    function settle() external;\\n    function settleAccount(address account) external;\\n    function openTake(UFixed18 amount) external;\\n    function closeTake(UFixed18 amount) external;\\n    function openMake(UFixed18 amount) external;\\n    function closeMake(UFixed18 amount) external;\\n    function closeAll(address account) external;\\n    function maintenance(address account) external view returns (UFixed18);\\n    function maintenanceNext(address account) external view returns (UFixed18);\\n    function isClosed(address account) external view returns (bool);\\n    function isLiquidating(address account) external view returns (bool);\\n    function position(address account) external view returns (Position memory);\\n    function pre(address account) external view returns (PrePosition memory);\\n    function latestVersion() external view returns (uint256);\\n    function positionAtVersion(uint256 oracleVersion) external view returns (Position memory);\\n    function pre() external view returns (PrePosition memory);\\n    function valueAtVersion(uint256 oracleVersion) external view returns (Accumulator memory);\\n    function shareAtVersion(uint256 oracleVersion) external view returns (Accumulator memory);\\n    function latestVersion(address account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x1fc668cdee0ac1e3e818fa0067681b067c11277ad3e729b7a32852c778b87bf0\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/IProductProvider.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.13;\\n\\nimport \\\"@equilibria/root/number/types/UFixed18.sol\\\";\\nimport \\\"@equilibria/root/number/types/Fixed18.sol\\\";\\nimport \\\"./types/Position.sol\\\";\\nimport \\\"./IOracleProvider.sol\\\";\\n\\ninterface IProductProvider is IOracleProvider {\\n    function oracle() external view returns (IOracleProvider);\\n    function name() external view returns (string memory);\\n    function symbol() external view returns (string memory);\\n    function rate(Position memory position) external view returns (Fixed18);\\n    function maintenance() external view returns (UFixed18);\\n    function fundingFee() external view returns (UFixed18);\\n    function makerFee() external view returns (UFixed18);\\n    function takerFee() external view returns (UFixed18);\\n    function makerLimit() external view returns (UFixed18);\\n}\\n\",\"keccak256\":\"0x67102367daec489222beb994a4c6cf2628352dbfc1ddb742d9d01f930ca09183\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/types/Accumulator.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.13;\\n\\nimport \\\"@equilibria/root/number/types/Fixed18.sol\\\";\\nimport \\\"./PackedAccumulator.sol\\\";\\n\\n/// @dev Accumulator type\\nstruct Accumulator {\\n    /// @dev maker accumulator per share\\n    Fixed18 maker;\\n    /// @dev taker accumulator per share\\n    Fixed18 taker;\\n}\\nusing AccumulatorLib for Accumulator global;\\n\\n/**\\n * @title AccountAccumulatorLib\\n * @notice Library that surfaces math operations for the Accumulator type.\\n * @dev Accumulators track the cumulative change in position value over time for the maker and taker positions\\n *      respectively. Account-level accumulators can then use two of these values `a` and `a'` to compute the\\n *      change in position value since last sync. This change in value is then used to compute P&L and fees.\\n */\\nlibrary AccumulatorLib {\\n    /**\\n     * @notice Creates a packed accumulator from an accumulator\\n     * @param self an accumulator\\n     * @return New packed accumulator\\n     */\\n    function pack(Accumulator memory self) internal pure returns (PackedAccumulator memory) {\\n        return PackedAccumulator({maker: self.maker.pack(), taker: self.taker.pack()});\\n    }\\n\\n    /**\\n     * @notice Adds two accumulators together\\n     * @param a The first accumulator to sum\\n     * @param b The second accumulator to sum\\n     * @return The resulting summed accumulator\\n     */\\n    function add(Accumulator memory a, Accumulator memory b) internal pure returns (Accumulator memory) {\\n        return Accumulator({maker: a.maker.add(b.maker), taker: a.taker.add(b.taker)});\\n    }\\n\\n    /**\\n     * @notice Subtracts accumulator `b` from `a`\\n     * @param a The accumulator to subtract from\\n     * @param b The accumulator to subtract\\n     * @return The resulting subtracted accumulator\\n     */\\n    function sub(Accumulator memory a, Accumulator memory b) internal pure returns (Accumulator memory) {\\n        return Accumulator({maker: a.maker.sub(b.maker), taker: a.taker.sub(b.taker)});\\n    }\\n\\n    /**\\n     * @notice Multiplies two accumulators together\\n     * @param a The first accumulator to multiply\\n     * @param b The second accumulator to multiply\\n     * @return The resulting multiplied accumulator\\n     */\\n    function mul(Accumulator memory a, Accumulator memory b) internal pure returns (Accumulator memory) {\\n        return Accumulator({maker: a.maker.mul(b.maker), taker: a.taker.mul(b.taker)});\\n    }\\n\\n    /**\\n     * @notice Sums the maker and taker together from a single accumulator\\n     * @param self The struct to operate on\\n     * @return The sum of its maker and taker\\n     */\\n    function sum(Accumulator memory self) internal pure returns (Fixed18) {\\n        return self.maker.add(self.taker);\\n    }\\n}\\n\",\"keccak256\":\"0x419fbe153e5569ce6ed9a4d563e99a99fa7476257f33faddabbe9582efd42d5b\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/types/PackedAccumulator.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.13;\\n\\nimport \\\"@equilibria/root/number/types/PackedFixed18.sol\\\";\\nimport \\\"./Accumulator.sol\\\";\\n\\n/// @dev PackedAccumulator type\\nstruct PackedAccumulator {\\n    /// @dev maker accumulator per share\\n    PackedFixed18 maker;\\n    /// @dev taker accumulator per share\\n    PackedFixed18 taker;\\n}\\nusing PackedAccumulatorLib for PackedAccumulator global;\\n\\n/**\\n * @title PackedAccumulatorLib\\n * @dev A packed version of the Accumulator which takes up a single storage slot using `PackedFixed18` values.\\n * @notice Library for the packed Accumulator type.\\n */\\nlibrary PackedAccumulatorLib {\\n    /**\\n     * @notice Creates an accumulator from a packed accumulator\\n     * @param self packed accumulator\\n     * @return New accumulator\\n     */\\n    function unpack(PackedAccumulator memory self) internal pure returns (Accumulator memory) {\\n        return Accumulator({maker: self.maker.unpack(), taker: self.taker.unpack()});\\n    }\\n}\\n\",\"keccak256\":\"0xe104c4b277f0247afbf22dc31278fa4514911e0fbe89beacac9d199c83a44a2f\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/types/PackedPosition.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.13;\\n\\nimport \\\"@equilibria/root/number/types/PackedUFixed18.sol\\\";\\nimport \\\"./Position.sol\\\";\\n\\n/// @dev PackedPosition type\\nstruct PackedPosition {\\n    /// @dev Quantity of the maker position\\n    PackedUFixed18 maker;\\n    /// @dev Quantity of the taker position\\n    PackedUFixed18 taker;\\n}\\nusing PackedPositionLib for PackedPosition global;\\n\\n/**\\n * @title PackedPositionLib\\n * @dev A packed version of the Position which takes up a single storage slot using `PackedFixed18` values.\\n * @notice Library for the packed Position type.\\n */\\nlibrary PackedPositionLib {\\n    /**\\n     * @notice Creates an position from a packed position\\n     * @param self packed position\\n     * @return New position\\n     */\\n    function unpack(PackedPosition memory self) internal pure returns (Position memory) {\\n        return Position({maker: self.maker.unpack(), taker: self.taker.unpack()});\\n    }\\n}\\n\",\"keccak256\":\"0x89b33d7d89e77dd130a744f8b2bb592d001a12c030e09b99b7cb6226d2b1343b\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/types/Position.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.13;\\n\\nimport \\\"@openzeppelin/contracts/utils/math/Math.sol\\\";\\nimport \\\"@equilibria/root/number/types/UFixed18.sol\\\";\\nimport \\\"./Accumulator.sol\\\";\\nimport \\\"./PrePosition.sol\\\";\\nimport \\\"./PackedPosition.sol\\\";\\n\\n/// @dev Position type\\nstruct Position {\\n    /// @dev Quantity of the maker position\\n    UFixed18 maker;\\n    /// @dev Quantity of the taker position\\n    UFixed18 taker;\\n}\\nusing PositionLib for Position global;\\n\\n/**\\n * @title PositionLib\\n * @notice Library that surfaces math and settlement computations for the Position type.\\n * @dev Positions track the current quantity of the account's maker and taker positions respectively\\n *      denominated as a unit of the product's payoff function.\\n */\\nlibrary PositionLib {\\n    /**\\n     * @notice Creates a packed position from an position\\n     * @param self A position\\n     * @return New packed position\\n     */\\n    function pack(Position memory self) internal pure returns (PackedPosition memory) {\\n        return PackedPosition({maker: self.maker.pack(), taker: self.taker.pack()});\\n    }\\n\\n    /**\\n     * @notice Returns whether the position is fully empty\\n     * @param self A position\\n     * @return Whether the position is empty\\n     */\\n    function isEmpty(Position memory self) internal pure returns (bool) {\\n        return self.maker.isZero() && self.taker.isZero();\\n    }\\n\\n    /**\\n     * @notice Adds position `a` and `b` together, returning the result\\n     * @param a The first position to sum\\n     * @param b The second position to sum\\n     * @return Resulting summed position\\n     */\\n    function add(Position memory a, Position memory b) internal pure returns (Position memory) {\\n        return Position({maker: a.maker.add(b.maker), taker: a.taker.add(b.taker)});\\n    }\\n\\n    /**\\n     * @notice Subtracts position `b` from `a`, returning the result\\n     * @param a The position to subtract from\\n     * @param b The position to subtract\\n     * @return Resulting subtracted position\\n     */\\n    function sub(Position memory a, Position memory b) internal pure returns (Position memory) {\\n        return Position({maker: a.maker.sub(b.maker), taker: a.taker.sub(b.taker)});\\n    }\\n\\n    /**\\n     * @notice Multiplies position `self` by accumulator `accumulator` and returns the resulting accumulator\\n     * @param self The Position to operate on\\n     * @param accumulator The accumulator to multiply by\\n     * @return Resulting multiplied accumulator\\n     */\\n    function mul(Position memory self, Accumulator memory accumulator) internal pure returns (Accumulator memory) {\\n        return Accumulator({\\n            maker: Fixed18Lib.from(self.maker).mul(accumulator.maker),\\n            taker: Fixed18Lib.from(self.taker).mul(accumulator.taker)\\n        });\\n    }\\n\\n    /**\\n     * @notice Scales position `self` by fixed-decimal `scale` and returns the resulting position\\n     * @param self The Position to operate on\\n     * @param scale The Fixed-decimal to scale by\\n     * @return Resulting scaled position\\n     */\\n    function mul(Position memory self, UFixed18 scale) internal pure returns (Position memory) {\\n        return Position({maker: self.maker.mul(scale), taker: self.taker.mul(scale)});\\n    }\\n\\n    /**\\n     * @notice Divides position `self` by `b` and returns the resulting accumulator\\n     * @param self The Position to operate on\\n     * @param b The number to divide by\\n     * @return Resulting divided accumulator\\n     */\\n    function div(Position memory self, uint256 b) internal pure returns (Accumulator memory) {\\n        return Accumulator({\\n            maker: Fixed18Lib.from(self.maker).div(Fixed18Lib.from(UFixed18Lib.from(b))),\\n            taker: Fixed18Lib.from(self.taker).div(Fixed18Lib.from(UFixed18Lib.from(b)))\\n        });\\n    }\\n\\n    /**\\n     * @notice Returns the maximum of `self`'s maker and taker values\\n     * @param self The struct to operate on\\n     * @return Resulting maximum value\\n     */\\n    function max(Position memory self) internal pure returns (UFixed18) {\\n        return UFixed18Lib.max(self.maker, self.taker);\\n    }\\n\\n    /**\\n     * @notice Sums the maker and taker together from a single position\\n     * @param self The struct to operate on\\n     * @return The sum of its maker and taker\\n     */\\n    function sum(Position memory self) internal pure returns (UFixed18) {\\n        return self.maker.add(self.taker);\\n    }\\n\\n    /**\\n     * @notice Computes the next position after the pending-settlement position delta is included\\n     * @param self The current Position\\n     * @param pre The pending-settlement position delta\\n     * @return Next Position\\n     */\\n    function next(Position memory self, PrePosition memory pre) internal pure returns (Position memory) {\\n        return sub(add(self, pre.openPosition), pre.closePosition);\\n    }\\n\\n    /**\\n     * @notice Returns the settled position at oracle version `toOracleVersion`\\n     * @dev Checks if a new position is ready to be settled based on the provided `toOracleVersion`\\n     *      and `pre` and returns accordingly\\n     * @param self The current Position\\n     * @param pre The pending-settlement position delta\\n     * @param provider The parameter provider of the product\\n     * @param toOracleVersion The oracle version to settle to\\n     * @return Settled position at oracle version\\n     * @return Fee accrued from opening or closing the position\\n     * @return Whether a new position was settled\\n     */\\n    function settled(\\n        Position memory self,\\n        PrePosition memory pre,\\n        IProductProvider provider,\\n        IOracleProvider.OracleVersion memory toOracleVersion\\n    ) internal view returns (Position memory, UFixed18, bool) {\\n        return pre.canSettle(toOracleVersion) ? (next(self, pre), pre.computeFee(provider, toOracleVersion), true) : (self, UFixed18Lib.ZERO, false);\\n    }\\n\\n    /**\\n     * @notice Returns the socialization factor for the current position\\n     * @dev Socialization account for the case where `taker` > `maker` temporarily due to a liquidation\\n     *      on the maker side. This dampens the taker's exposure pro-rata to ensure that the maker side\\n     *      is never exposed over 1 x short.\\n     * @param self The Position to operate on\\n     * @return Socialization factor\\n     */\\n    function socializationFactor(Position memory self) internal pure returns (UFixed18) {\\n        return self.taker.isZero() ? UFixed18Lib.ONE : UFixed18Lib.min(UFixed18Lib.ONE, self.maker.div(self.taker));\\n    }\\n}\\n\",\"keccak256\":\"0x3daae0f4184ae21e9883d8a87853ce39b53893ecb37a5bbb32f94b3b9973a347\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/types/PrePosition.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.13;\\n\\nimport \\\"./Position.sol\\\";\\nimport \\\"./ProductProvider.sol\\\";\\n\\n/// @dev PrePosition type\\nstruct PrePosition {\\n    /// @dev Oracle version at which the new position delta was recorded\\n    uint256 oracleVersion;\\n\\n    /// @dev Size of position to open at oracle version\\n    Position openPosition;\\n\\n    /// @dev Size of position to close at oracle version\\n    Position closePosition;\\n}\\nusing PrePositionLib for PrePosition global;\\n\\n/**\\n * @title PrePositionLib\\n * @notice Library that manages a pre-settlement position delta.\\n * @dev PrePositions track the currently awaiting-settlement deltas to a settled Position. These are\\n *      Primarily necessary to introduce lag into the settlement system such that oracle lag cannot be\\n *      gamed to a user's advantage. When a user opens or closes a new position, it sits as a PrePosition\\n *      for one oracle version until it's settle into the Position, making it then effective. PrePositions\\n *      are automatically settled at the correct oracle version even if a flywheel call doesn't happen until\\n *      several version into the future by using the historical version lookups in the corresponding \\\"Versioned\\\"\\n *      global state types.\\n */\\nlibrary PrePositionLib {\\n    using ProductProviderLib for IProductProvider;\\n\\n    /**\\n     * @notice Returns whether there is no pending-settlement position delta\\n     * @dev Can be \\\"empty\\\" even with a non-zero oracleVersion if a position is opened and\\n     *      closed in the same version netting out to a zero position delta\\n     * @param self The struct to operate on\\n     * @return Whether the pending-settlement position delta is empty\\n     */\\n    function isEmpty(PrePosition memory self) internal pure returns (bool) {\\n        return self.openPosition.isEmpty() && self.closePosition.isEmpty();\\n    }\\n\\n    /**\\n     * @notice Increments the maker side of the open position delta\\n     * @dev Nets out open and close deltas to minimize the size of each\\n     * @param self The struct to operate on\\n     * @param currentVersion The current oracle version index\\n     * @param amount The position amount to open\\n     */\\n    function openMake(PrePosition storage self, uint256 currentVersion, UFixed18 amount) internal {\\n        self.openPosition.maker = self.openPosition.maker.add(amount);\\n        self.oracleVersion = currentVersion;\\n        netMake(self);\\n    }\\n\\n    /**\\n     * @notice Increments the maker side of the close position delta\\n     * @dev Nets out open and close deltas to minimize the size of each\\n     * @param self The struct to operate on\\n     * @param currentVersion The current oracle version index\\n     * @param amount The maker position amount to close\\n     */\\n    function closeMake(PrePosition storage self, uint256 currentVersion, UFixed18 amount) internal {\\n        self.closePosition.maker = self.closePosition.maker.add(amount);\\n        self.oracleVersion = currentVersion;\\n        netMake(self);\\n    }\\n\\n    /**\\n     * @notice Increments the taker side of the open position delta\\n     * @dev Nets out open and close deltas to minimize the size of each\\n     * @param self The struct to operate on\\n     * @param currentVersion The current oracle version index\\n     * @param amount The taker position amount to open\\n     */\\n    function openTake(PrePosition storage self, uint256 currentVersion, UFixed18 amount) internal {\\n        self.openPosition.taker = self.openPosition.taker.add(amount);\\n        self.oracleVersion = currentVersion;\\n        netTake(self);\\n    }\\n\\n    /**\\n     * @notice Increments the taker side of the close position delta\\n     * @dev Nets out open and close deltas to minimize the size of each\\n     * @param self The struct to operate on\\n     * @param currentVersion The current oracle version index\\n     * @param amount The taker position amount to close\\n     */\\n    function closeTake(PrePosition storage self, uint256 currentVersion, UFixed18 amount) internal {\\n        self.closePosition.taker = self.closePosition.taker.add(amount);\\n        self.oracleVersion = currentVersion;\\n        netTake(self);\\n    }\\n\\n    /**\\n     * @notice Nets out the open and close on the maker side of the position delta\\n     * @param self The struct to operate on\\n     */\\n    function netMake(PrePosition storage self) private {\\n        if (self.openPosition.maker.gt(self.closePosition.maker)) {\\n            self.openPosition.maker = self.openPosition.maker.sub(self.closePosition.maker);\\n            self.closePosition.maker = UFixed18Lib.ZERO;\\n        } else {\\n            self.closePosition.maker = self.closePosition.maker.sub(self.openPosition.maker);\\n            self.openPosition.maker = UFixed18Lib.ZERO;\\n        }\\n    }\\n\\n    /**\\n     * @notice Nets out the open and close on the taker side of the position delta\\n     * @param self The struct to operate on\\n     */\\n    function netTake(PrePosition storage self) private {\\n        if (self.openPosition.taker.gt(self.closePosition.taker)) {\\n            self.openPosition.taker = self.openPosition.taker.sub(self.closePosition.taker);\\n            self.closePosition.taker = UFixed18Lib.ZERO;\\n        } else {\\n            self.closePosition.taker = self.closePosition.taker.sub(self.openPosition.taker);\\n            self.openPosition.taker = UFixed18Lib.ZERO;\\n        }\\n    }\\n\\n    /**\\n     * @notice Returns whether the the pending position delta can be settled at version `toOracleVersion`\\n     * @dev Pending-settlement positions deltas can be settled (1) oracle version after they are recorded\\n     * @param self The struct to operate on\\n     * @param toOracleVersion The potential oracle version to settle\\n     * @return Whether the position delta can be settled\\n     */\\n    function canSettle(\\n        PrePosition memory self,\\n        IOracleProvider.OracleVersion memory toOracleVersion\\n    ) internal pure returns (bool) {\\n        return !isEmpty(self) && toOracleVersion.version > self.oracleVersion;\\n    }\\n\\n    /**\\n     * @notice Computes the fee incurred for opening or closing the pending-settlement position\\n     * @param self The struct to operate on\\n     * @param provider The parameter provider of the product\\n     * @param toOracleVersion The oracle version at which settlement takes place\\n     * @return positionFee The maker / taker fee incurred\\n     */\\n    function computeFee(\\n        PrePosition memory self,\\n        IProductProvider provider,\\n        IOracleProvider.OracleVersion memory toOracleVersion\\n    ) internal view returns (UFixed18) {\\n        Position memory positionDelta = self.openPosition.add(self.closePosition);\\n\\n        (UFixed18 makerNotional, UFixed18 takerNotional) = (\\n            Fixed18Lib.from(positionDelta.maker).mul(toOracleVersion.price).abs(),\\n            Fixed18Lib.from(positionDelta.taker).mul(toOracleVersion.price).abs()\\n        );\\n\\n        return makerNotional.mul(provider.safeMakerFee()).add(takerNotional.mul(provider.safeTakerFee()));\\n    }\\n\\n    /**\\n     * @notice Computes the next oracle version to settle\\n     * @dev - If there is no pending-settlement position delta, returns the current oracle version\\n     *      - If the pending-settlement position delta is not yet ready to be settled, returns the current oracle version\\n     *      - Otherwise returns the oracle version at which the pending-settlement position delta can be first settled\\n     *\\n     *      Corresponds to point (b) in the Position settlement flow\\n     * @param self The struct to operate on\\n     * @param currentVersion The current oracle version index\\n     * @return Next oracle version to settle\\n     */\\n    function oracleVersionToSettle(PrePosition storage self, uint256 currentVersion) internal view returns (uint256) {\\n        uint256 next = self.oracleVersion + 1;\\n\\n        if (next == 1) return currentVersion;             // no pre position\\n        if (next > currentVersion) return currentVersion; // pre in future\\n        return next;                                      // settle pre\\n    }\\n}\\n\",\"keccak256\":\"0x518e0e663046150cca4f0b88fdcf861b1283455d0ce0e7ea908996f476b45fcb\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/types/ProductProvider.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.13;\\n\\nimport \\\"@equilibria/root/number/types/UFixed18.sol\\\";\\nimport \\\"../IProductProvider.sol\\\";\\nimport \\\"../IController.sol\\\";\\n\\n/**\\n * @title ProductProviderLib\\n * @notice Library that adds a safeguard wrapper to certain product parameters.\\n * @dev Product providers are semi-untrusted as they contain custom code from the product owners. Owners\\n *      have full control over this parameter-setting code, however there are some \\\"known ranges\\\" that\\n *      a parameter cannot be outside of (i.e. a fee being over 100%).\\n */\\nlibrary ProductProviderLib {\\n    /**\\n     * @notice Returns the minimum funding fee parameter with a capped range for safety\\n     * @dev Caps controller.minFundingFee() <= self.minFundingFee() <= 1\\n     * @param self The parameter provider to operate on\\n     * @param controller The protocol Factory contract\\n     * @return Safe minimum funding fee parameter\\n     */\\n    function safeFundingFee(IProductProvider self, IController controller) internal view returns (UFixed18) {\\n        return self.fundingFee().max(controller.minFundingFee()).min(UFixed18Lib.ONE);\\n    }\\n\\n    /**\\n     * @notice Returns the maker fee parameter with a capped range for safety\\n     * @dev Caps self.makerFee() <= 1\\n     * @param self The parameter provider to operate on\\n     * @return Safe maker fee parameter\\n     */\\n    function safeMakerFee(IProductProvider self) internal view returns (UFixed18) {\\n        return self.makerFee().min(UFixed18Lib.ONE);\\n    }\\n\\n    /**\\n     * @notice Returns the taker fee parameter with a capped range for safety\\n     * @dev Caps self.takerFee() <= 1\\n     * @param self The parameter provider to operate on\\n     * @return Safe taker fee parameter\\n     */\\n    function safeTakerFee(IProductProvider self) internal view returns (UFixed18) {\\n        return self.takerFee().min(UFixed18Lib.ONE);\\n    }\\n}\\n\",\"keccak256\":\"0x614330e1b42b84df30d9a240ce54a692948815d7b13446c86c63361936cedf5d\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/types/ProgramInfo.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity 0.8.13;\\n\\nimport \\\"@equilibria/root/token/types/Token.sol\\\";\\nimport \\\"../IProduct.sol\\\";\\nimport \\\"./Position.sol\\\";\\nimport \\\"./Accumulator.sol\\\";\\n\\nstruct ProgramInfo {\\n    /// @dev Amount of total maker and taker rewards\\n    Position amount;\\n\\n    /// @dev start timestamp of the program\\n    uint256 start;\\n\\n    /// @dev duration of the program (in seconds)\\n    uint256 duration;\\n\\n    /// @dev grace period the program where funds can still be claimed (in seconds)\\n    uint256 grace;\\n\\n    /// @dev Product market contract to be incentivized\\n    IProduct product;\\n\\n    /// @dev Reward ERC20 token contract\\n    Token token;\\n}\\nusing ProgramInfoLib for ProgramInfo global;\\n\\nlibrary ProgramInfoLib {\\n    uint256 private constant MIN_DURATION = 1 days;\\n    uint256 private constant MAX_DURATION = 2 * 365 days;\\n    uint256 private constant MIN_GRACE = 7 days;\\n    uint256 private constant MAX_GRACE = 30 days;\\n\\n    error ProgramAlreadyStartedError();\\n    error ProgramInvalidDurationError();\\n    error ProgramInvalidGraceError();\\n\\n    /**\\n     * @notice Validates and creates a new Program\\n     * @param fee Global Incentivizer fee\\n     * @param info Un-sanitized static program information\\n     * @return programInfo Validated static program information with fee excluded\\n     * @return programFee Fee amount for the program\\n     */\\n    function create(UFixed18 fee, ProgramInfo memory info)\\n    internal view returns (ProgramInfo memory programInfo, UFixed18 programFee) {\\n        if (isStarted(info, block.timestamp)) revert ProgramAlreadyStartedError();\\n        if (info.duration < MIN_DURATION || info.duration > MAX_DURATION) revert ProgramInvalidDurationError();\\n        if (info.grace < MIN_GRACE || info.grace > MAX_GRACE) revert ProgramInvalidGraceError();\\n\\n        Position memory amountAfterFee = info.amount.mul(UFixed18Lib.ONE.sub(fee));\\n\\n        programInfo = ProgramInfo({\\n            start: info.start,\\n            duration: info.duration,\\n            grace: info.grace,\\n\\n            product: info.product,\\n            token: info.token,\\n            amount: amountAfterFee\\n        });\\n        programFee = info.amount.sub(amountAfterFee).sum();\\n    }\\n\\n    /**\\n     * @notice Returns the maker and taker amounts per position share\\n     * @param self The ProgramInfo to operate on\\n     * @return programFee Amounts per share\\n     */\\n    function amountPerShare(ProgramInfo memory self) internal pure returns (Accumulator memory) {\\n        return self.amount.div(self.duration);\\n    }\\n\\n    /**\\n     * @notice Returns whether the program has started by timestamp `timestamp`\\n     * @param self The ProgramInfo to operate on\\n     * @param timestamp Timestamp to check for\\n     * @return Whether the program has started\\n     */\\n    function isStarted(ProgramInfo memory self, uint256 timestamp) internal pure returns (bool) {\\n        return timestamp >= self.start;\\n    }\\n\\n    /**\\n     * @notice Returns whether the program is completed by timestamp `timestamp`\\n     * @param self The ProgramInfo to operate on\\n     * @param timestamp Timestamp to check for\\n     * @return Whether the program is completed\\n     */\\n    function isComplete(ProgramInfo memory self, uint256 timestamp) internal pure returns (bool) {\\n        return timestamp >= (self.start + self.duration);\\n    }\\n}\\n\",\"keccak256\":\"0x1cc229d67e81e34a7d50fcaba343aba4dd490cee046ee3ed88a436c69c4f1dc0\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506124df806100206000396000f3fe60806040523480156200001157600080fd5b50600436106200033c5760003560e01c80637a7da00411620001bd578063ae9526331162000101578063d809aa6111620000a3578063e975c0c3116200007a578063e975c0c31462000736578063ee50ccb51462000740578063f8dfc2cc146200075757600080fd5b8063d809aa611462000701578063d8dfeb451462000718578063e30c3978146200072c57600080fd5b8063ba2de9bc11620000d8578063ba2de9bc14620006c9578063c0c53b8b14620006d3578063c2cc6f1414620006ea57600080fd5b8063ae9526331462000691578063af2757b714620006a8578063b0e21e8a14620006bf57600080fd5b80638da5cb5b116200016b578063a123c33e1162000142578063a123c33e1462000659578063a1eef78e1462000670578063a36a3630146200068757600080fd5b80638da5cb5b146200062e5780638fbf180314620006385780639fd0506d146200064f57600080fd5b80637d254e6611620001a05780637d254e6614620005d35780637d49c1b714620005f65780637fd29192146200060057600080fd5b80637a7da00414620005a55780637c01369014620005bc57600080fd5b80634c5430a0116200028557806364e893de116200023357806366c06239116200020a57806366c0623914620005705780636fc6407c146200057a57806375907f28146200058e57600080fd5b806364e893de146200052b57806365e821e51462000542578063666e1b39146200055957600080fd5b80635c975abb11620002685780635c975abb14620004aa5780635f1cc00514620004b457806361d027b3146200052157600080fd5b80634c5430a0146200047c57806353922864146200049357600080fd5b80632d809cb611620002ef5780633ceda01111620002c65780633ceda01114620004355780634256dd78146200044e578063478739ca146200046557600080fd5b80632d809cb614620003f35780632e48152c146200040a578063391d0c9c146200042157600080fd5b8063214296e81162000324578063214296e8146200039d5780632933d89114620003c35780632b800e3b14620003dc57600080fd5b8062dde10e14620003415780630a1289ad146200036d575b600080fd5b6200035862000352366004620019d5565b6200076e565b60405190151581526020015b60405180910390f35b620003846200037e36600462001a08565b620007bd565b6040516001600160a01b03909116815260200162000364565b62000358620003ae366004620019d5565b60056020526000908152604090205460ff1681565b620003da620003d4366004620019d5565b620007e1565b005b62000384620003ed366004620019d5565b62000865565b620003846200040436600462001a08565b6200089d565b620003586200041b36600462001a08565b620008c1565b60025462000384906001600160a01b031681565b6200043f60095481565b60405190815260200162000364565b620003da6200045f366004620019d5565b620008e5565b620003da62000476366004620019d5565b620009aa565b620003846200048d366004620019d5565b62000a6f565b62000384620004a4366004620019d5565b62000ac7565b6200035862000b0d565b620004cb620004c5366004620019d5565b62000b4a565b604051620003649190600060a0820190506001600160a01b038084511683528060208501511660208401528060408501511660408401528060608501511660608401525060808301511515608083015292915050565b6200038462000bf8565b620003846200053c36600462001a28565b62000c0b565b620003da6200055336600462001a08565b62000e40565b620003846200056a36600462001a08565b62000ed2565b6200043f62000ef6565b60015462000384906001600160a01b031681565b620003da6200059f366004620019d5565b62001078565b620003da620005b636600462001a08565b6200113d565b620003da620005cd36600462001a08565b620011cf565b6200043f620005e436600462001a08565b60046020526000908152604090205481565b6200043f600b5481565b620003586200061136600462001a08565b6001600160a01b0316600090815260046020526040902054151590565b6200038462001261565b620003da62000649366004620019d5565b6200126f565b6200038462001344565b620003846200066a366004620019d5565b62001352565b620003da62000681366004620019d5565b6200138d565b6200043f60085481565b620003da620006a236600462001a28565b62001406565b620003da620006b936600462001a28565b620014c1565b6200043f60065481565b6200043f600a5481565b620003da620006e436600462001a5b565b62001579565b620003da620006fb36600462001aad565b62001685565b620003da62000712366004620019d5565b62001754565b60005462000384906001600160a01b031681565b6200038462001819565b6200043f60075481565b620003da6200075136600462001aad565b62001827565b620003da6200076836600462001a28565b620018bb565b60006200077a62000b0d565b80620007b757506003828154811062000797576200079762001ad9565b906000526020600020906004020160030160149054906101000a900460ff165b92915050565b6001600160a01b038116600090815260046020526040812054620007b79062000ac7565b6000620007ee8162001352565b6001600160a01b0316336001600160a01b031614620008285760405163f0a882b560e01b8152600481018290526024015b60405180910390fd5b600a8290556040518281527fd19fe8ad9152af12b174a60210fb798db0767d63973ebb97298dc44d67a5c82d906020015b60405180910390a15050565b6000600382815481106200087d576200087d62001ad9565b60009182526020909120600490910201546001600160a01b031692915050565b6001600160a01b038116600090815260046020526040812054620007b79062000a6f565b6001600160a01b038116600090815260046020526040812054620007b7906200076e565b6000620008f28162001352565b6001600160a01b0316336001600160a01b031614620009285760405163f0a882b560e01b8152600481018290526024016200081f565b6200093c82670de0b6b3a764000062001976565b1562000974576040517f3c5df10400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60068290556040518281527fd10d75876659a287a59a6ccfa2e3fff42f84d94b542837acd30bc184d562de409060200162000859565b6000620009b78162001352565b6001600160a01b0316336001600160a01b031614620009ed5760405163f0a882b560e01b8152600481018290526024016200081f565b62000a0182670de0b6b3a764000062001976565b1562000a39576040517f0c6b0ec800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60078290556040518281527fdf7e6bc55eeb2668bd338e44a5abb721b1f98ad51f7a00baaa1b62f9383862d79060200162000859565b6000806003838154811062000a885762000a8862001ad9565b60009182526020909120600260049092020101546001600160a01b03169050801562000ab5578062000ac0565b62000ac08362001352565b9392505050565b6000806003838154811062000ae05762000ae062001ad9565b60009182526020909120600360049092020101546001600160a01b03169050801562000ab5578062000ac0565b6000600360008154811062000b265762000b2662001ad9565b906000526020600020906004020160030160149054906101000a900460ff16905090565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091526003828154811062000b8b5762000b8b62001ad9565b60009182526020918290206040805160a08101825260049390930290910180546001600160a01b03908116845260018201548116948401949094526002810154841691830191909152600301549182166060820152600160a01b90910460ff161515608082015292915050565b600062000c06600062000a6f565b905090565b60008262000c198162001352565b6001600160a01b0316336001600160a01b03161462000c4f5760405163f0a882b560e01b8152600481018290526024016200081f565b8360000362000c8a576040517f7244bc7800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000805260056020527f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bc5460ff1615801562000cd5575060008481526005602052604090205460ff16155b1562000d0d576040517fbe61bb8700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002546040516000916001600160a01b03169062000d2b90620019c7565b6001600160a01b039091168152604060208201819052600090820152606001604051809103906000f08015801562000d67573d6000803e3d6000fd5b506040517fc4d66de80000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152919250829182169063c4d66de890602401600060405180830381600087803b15801562000dca57600080fd5b505af115801562000ddf573d6000803e3d6000fd5b505050506001600160a01b038181166000818152600460209081526040918290208a90559051928816835290917fa66df2ac9413442073c2e47b33e555f5891823df7841196bd1f197175a12f8ae910160405180910390a295945050505050565b600062000e4d8162001352565b6001600160a01b0316336001600160a01b03161462000e835760405163f0a882b560e01b8152600481018290526024016200081f565b600180546001600160a01b0319166001600160a01b0384169081179091556040519081527f18c973e70eca8db74eab2a3e0de3c4bffcc46c45f6f17f600e2d4d4f744e2a2b9060200162000859565b6001600160a01b038116600090815260046020526040812054620007b79062001352565b600380546040805160a0810182526000808252336020808401828152848601848152606086018581526080870186815260018a018b559986529551600489027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b810180546001600160a01b039384166001600160a01b03199182161790915593517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c8201805491841691861691909117905591517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d83018054918316919094161790925594517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85e909501805498511515600160a01b027fffffffffffffffffffffff0000000000000000000000000000000000000000009099169590911694909417969096179092559151908152909282917f645c9ae30d6a6aa6b2dace770fa0cfac2d8d44b9b036510e0a16aab39e6b5931910160405180910390a2919050565b6000620010858162001352565b6001600160a01b0316336001600160a01b031614620010bb5760405163f0a882b560e01b8152600481018290526024016200081f565b620010cf82670de0b6b3a764000062001976565b1562001107576040517fb4c4f79900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60088290556040518281527f1a35ca75fc5ab34ae3487b3507e7453b6e4c15a69f2392939fbbcf8f64558ad19060200162000859565b60006200114a8162001352565b6001600160a01b0316336001600160a01b031614620011805760405163f0a882b560e01b8152600481018290526024016200081f565b600080546001600160a01b0319166001600160a01b0384169081179091556040519081527fa0fe5cb0e8843811ca9f6123983dcdfd45a33b61892b9b8f380ed444078e299a9060200162000859565b6000620011dc8162001352565b6001600160a01b0316336001600160a01b031614620012125760405163f0a882b560e01b8152600481018290526024016200081f565b600280546001600160a01b0319166001600160a01b0384169081179091556040519081527f36466d973cc33c9b726f867d2fc1f8cd56d58de206993f62ccba543a3429ea629060200162000859565b600062000c06600062001352565b60006003828154811062001287576200128762001ad9565b6000918252602090912060049091020180549091506001600160a01b0316338114620012e3576040517f07f41a5f000000000000000000000000000000000000000000000000000000008152600481018490526024016200081f565b81546001600160a01b031990811683556001830180546001600160a01b03841692168217905560405190815283907f87c983c6a4d6d9a68e6d99934d1fb50f760858298c06f8ed6b316f534e06faf4906020015b60405180910390a2505050565b600062000c06600062000ac7565b6000600382815481106200136a576200136a62001ad9565b60009182526020909120600160049092020101546001600160a01b031692915050565b60006200139a8162001352565b6001600160a01b0316336001600160a01b031614620013d05760405163f0a882b560e01b8152600481018290526024016200081f565b600b8290556040518281527f7e6452dce5202ad16be30ea14955296f7157b95e4ca48b73fc54d54601185adf9060200162000859565b81620014128162001352565b6001600160a01b0316336001600160a01b031614620014485760405163f0a882b560e01b8152600481018290526024016200081f565b81600384815481106200145f576200145f62001ad9565b60009182526020918290206004919091020160030180546001600160a01b0319166001600160a01b03938416179055604051918416825284917f7be390d6034bf06d145f44a071a895ad3320f09c185598f74add0da31cada185910162001337565b81620014cd8162001352565b6001600160a01b0316336001600160a01b031614620015035760405163f0a882b560e01b8152600481018290526024016200081f565b81600384815481106200151a576200151a62001ad9565b60009182526020918290206004919091020180546001600160a01b0319166001600160a01b03938416179055604051918416825284917f0bffd4439c17923ee1b2b093be5394c42dcab0d9394e349a8d6a059c239ba603910162001337565b600180620015a57f5db5abc19987c2b3729df7961b62b6bb0bae886dd47e3ce25bb3a3af34c6d80b5490565b10620015e1576040517f1e7a9d95000000000000000000000000000000000000000000000000000000008152600481018290526024016200081f565b6200160b7f5db5abc19987c2b3729df7961b62b6bb0bae886dd47e3ce25bb3a3af34c6d80b829055565b60017fad57d7911b7e3d6c3c79a68ba909a7f4ba41f9485e5207b12dee0d0c6af5398c556200163962000ef6565b5062001645846200113d565b620016508362000e40565b6200165b82620011cf565b60007fad57d7911b7e3d6c3c79a68ba909a7f4ba41f9485e5207b12dee0d0c6af5398c5550505050565b81620016918162000ac7565b6001600160a01b0316336001600160a01b031614620016e0576040517feb94b522000000000000000000000000000000000000000000000000000000008152600481018290526024016200081f565b8160038481548110620016f757620016f762001ad9565b906000526020600020906004020160030160146101000a81548160ff021916908315150217905550827f8687fadd114273583c49dbd5c380ea8aada2a3f92db9fc9fba379906735633268360405162001337911515815260200190565b6000620017618162001352565b6001600160a01b0316336001600160a01b031614620017975760405163f0a882b560e01b8152600481018290526024016200081f565b620017ab82670de0b6b3a764000062001976565b15620017e3576040517f7c3ceda900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60098290556040518281527f852c049e335a49416ecbcb0128935cc3832c307d450d206f0a2d0bf2b28ba2db9060200162000859565b600062000c06600062000865565b6000620018348162001352565b6001600160a01b0316336001600160a01b0316146200186a5760405163f0a882b560e01b8152600481018290526024016200081f565b600083815260056020908152604091829020805460ff1916851515908117909155915191825284917faf22ec546747fecccb88b4e0bfdb870a12b89d281ab0167f74ed197b456903c2910162001337565b81620018c78162001352565b6001600160a01b0316336001600160a01b031614620018fd5760405163f0a882b560e01b8152600481018290526024016200081f565b816003848154811062001914576200191462001ad9565b60009182526020918290206004919091020160020180546001600160a01b0319166001600160a01b03938416179055604051918416825284917fffd31ccade46a73a57d8efd7d740bbf6aa67e50a158c98ad82a06ad31556cef4910162001337565b60006200198483836200198e565b6002149392505050565b6000828280821115620019a757600292505050620007b7565b80821015620019bc57600092505050620007b7565b506001949350505050565b6109a18062001b0983390190565b600060208284031215620019e857600080fd5b5035919050565b6001600160a01b038116811462001a0557600080fd5b50565b60006020828403121562001a1b57600080fd5b813562000ac081620019ef565b6000806040838503121562001a3c57600080fd5b82359150602083013562001a5081620019ef565b809150509250929050565b60008060006060848603121562001a7157600080fd5b833562001a7e81620019ef565b9250602084013562001a9081620019ef565b9150604084013562001aa281620019ef565b809150509250925092565b6000806040838503121562001ac157600080fd5b823591506020830135801515811462001a5057600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfe60806040526040516109a13803806109a18339810160408190526100229161048b565b61004d60017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5161054b565b60008051602061095a8339815191521461006957610069610570565b6100758282600061007c565b50506105f0565b61008583610147565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a26000825111806100c65750805b1561014257610140836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101309190610586565b836102d860201b6100291760201c565b505b505050565b61015a8161030460201b6100551760201c565b6101b95760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b61022d816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021e9190610586565b61030460201b6100551760201c565b6102925760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b60648201526084016101b0565b806102b760008051602061095a83398151915260001b61031360201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102fd838360405180606001604052806027815260200161097a60279139610316565b9392505050565b6001600160a01b03163b151590565b90565b60606001600160a01b0384163b61037e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101b0565b600080856001600160a01b03168560405161039991906105a1565b600060405180830381855af49150503d80600081146103d4576040519150601f19603f3d011682016040523d82523d6000602084013e6103d9565b606091505b5090925090506103ea8282866103f4565b9695505050505050565b606083156104035750816102fd565b8251156104135782518084602001fd5b8160405162461bcd60e51b81526004016101b091906105bd565b80516001600160a01b038116811461044457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561047a578181015183820152602001610462565b838111156101405750506000910152565b6000806040838503121561049e57600080fd5b6104a78361042d565b60208401519092506001600160401b03808211156104c457600080fd5b818501915085601f8301126104d857600080fd5b8151818111156104ea576104ea610449565b604051601f8201601f19908116603f0116810190838211818310171561051257610512610449565b8160405282815288602084870101111561052b57600080fd5b61053c83602083016020880161045f565b80955050505050509250929050565b60008282101561056b57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b60006020828403121561059857600080fd5b6102fd8261042d565b600082516105b381846020870161045f565b9190910192915050565b60208152600082518060208401526105dc81604085016020870161045f565b601f01601f19169190910160400192915050565b61035b806105ff6000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b610100565b565b606061004e83836040518060600160405280602781526020016102ff60279139610124565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fb9190610256565b905090565b3660008037600080366000845af43d6000803e80801561011f573d6000f35b3d6000fd5b60606001600160a01b0384163b6101a85760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e7472616374000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b600080856001600160a01b0316856040516101c391906102af565b600060405180830381855af49150503d80600081146101fe576040519150601f19603f3d011682016040523d82523d6000602084013e610203565b606091505b509150915061021382828661021d565b9695505050505050565b6060831561022c57508161004e565b82511561023c5782518084602001fd5b8160405162461bcd60e51b815260040161019f91906102cb565b60006020828403121561026857600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b8381101561029a578181015183820152602001610282565b838111156102a9576000848401525b50505050565b600082516102c181846020870161027f565b9190910192915050565b60208152600082518060208401526102ea81604085016020870161027f565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220c2cd8522e2d940840276495aefa7e527fd843d9e8d6ae46b5af07f6c1321a21664736f6c634300080d0033a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220a04865a334deed2c99c1cee236d179e04e7b74ce84f50edc0e99b9d2941d4f6a64736f6c634300080d0033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b50600436106200033c5760003560e01c80637a7da00411620001bd578063ae9526331162000101578063d809aa6111620000a3578063e975c0c3116200007a578063e975c0c31462000736578063ee50ccb51462000740578063f8dfc2cc146200075757600080fd5b8063d809aa611462000701578063d8dfeb451462000718578063e30c3978146200072c57600080fd5b8063ba2de9bc11620000d8578063ba2de9bc14620006c9578063c0c53b8b14620006d3578063c2cc6f1414620006ea57600080fd5b8063ae9526331462000691578063af2757b714620006a8578063b0e21e8a14620006bf57600080fd5b80638da5cb5b116200016b578063a123c33e1162000142578063a123c33e1462000659578063a1eef78e1462000670578063a36a3630146200068757600080fd5b80638da5cb5b146200062e5780638fbf180314620006385780639fd0506d146200064f57600080fd5b80637d254e6611620001a05780637d254e6614620005d35780637d49c1b714620005f65780637fd29192146200060057600080fd5b80637a7da00414620005a55780637c01369014620005bc57600080fd5b80634c5430a0116200028557806364e893de116200023357806366c06239116200020a57806366c0623914620005705780636fc6407c146200057a57806375907f28146200058e57600080fd5b806364e893de146200052b57806365e821e51462000542578063666e1b39146200055957600080fd5b80635c975abb11620002685780635c975abb14620004aa5780635f1cc00514620004b457806361d027b3146200052157600080fd5b80634c5430a0146200047c57806353922864146200049357600080fd5b80632d809cb611620002ef5780633ceda01111620002c65780633ceda01114620004355780634256dd78146200044e578063478739ca146200046557600080fd5b80632d809cb614620003f35780632e48152c146200040a578063391d0c9c146200042157600080fd5b8063214296e81162000324578063214296e8146200039d5780632933d89114620003c35780632b800e3b14620003dc57600080fd5b8062dde10e14620003415780630a1289ad146200036d575b600080fd5b6200035862000352366004620019d5565b6200076e565b60405190151581526020015b60405180910390f35b620003846200037e36600462001a08565b620007bd565b6040516001600160a01b03909116815260200162000364565b62000358620003ae366004620019d5565b60056020526000908152604090205460ff1681565b620003da620003d4366004620019d5565b620007e1565b005b62000384620003ed366004620019d5565b62000865565b620003846200040436600462001a08565b6200089d565b620003586200041b36600462001a08565b620008c1565b60025462000384906001600160a01b031681565b6200043f60095481565b60405190815260200162000364565b620003da6200045f366004620019d5565b620008e5565b620003da62000476366004620019d5565b620009aa565b620003846200048d366004620019d5565b62000a6f565b62000384620004a4366004620019d5565b62000ac7565b6200035862000b0d565b620004cb620004c5366004620019d5565b62000b4a565b604051620003649190600060a0820190506001600160a01b038084511683528060208501511660208401528060408501511660408401528060608501511660608401525060808301511515608083015292915050565b6200038462000bf8565b620003846200053c36600462001a28565b62000c0b565b620003da6200055336600462001a08565b62000e40565b620003846200056a36600462001a08565b62000ed2565b6200043f62000ef6565b60015462000384906001600160a01b031681565b620003da6200059f366004620019d5565b62001078565b620003da620005b636600462001a08565b6200113d565b620003da620005cd36600462001a08565b620011cf565b6200043f620005e436600462001a08565b60046020526000908152604090205481565b6200043f600b5481565b620003586200061136600462001a08565b6001600160a01b0316600090815260046020526040902054151590565b6200038462001261565b620003da62000649366004620019d5565b6200126f565b6200038462001344565b620003846200066a366004620019d5565b62001352565b620003da62000681366004620019d5565b6200138d565b6200043f60085481565b620003da620006a236600462001a28565b62001406565b620003da620006b936600462001a28565b620014c1565b6200043f60065481565b6200043f600a5481565b620003da620006e436600462001a5b565b62001579565b620003da620006fb36600462001aad565b62001685565b620003da62000712366004620019d5565b62001754565b60005462000384906001600160a01b031681565b6200038462001819565b6200043f60075481565b620003da6200075136600462001aad565b62001827565b620003da6200076836600462001a28565b620018bb565b60006200077a62000b0d565b80620007b757506003828154811062000797576200079762001ad9565b906000526020600020906004020160030160149054906101000a900460ff165b92915050565b6001600160a01b038116600090815260046020526040812054620007b79062000ac7565b6000620007ee8162001352565b6001600160a01b0316336001600160a01b031614620008285760405163f0a882b560e01b8152600481018290526024015b60405180910390fd5b600a8290556040518281527fd19fe8ad9152af12b174a60210fb798db0767d63973ebb97298dc44d67a5c82d906020015b60405180910390a15050565b6000600382815481106200087d576200087d62001ad9565b60009182526020909120600490910201546001600160a01b031692915050565b6001600160a01b038116600090815260046020526040812054620007b79062000a6f565b6001600160a01b038116600090815260046020526040812054620007b7906200076e565b6000620008f28162001352565b6001600160a01b0316336001600160a01b031614620009285760405163f0a882b560e01b8152600481018290526024016200081f565b6200093c82670de0b6b3a764000062001976565b1562000974576040517f3c5df10400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60068290556040518281527fd10d75876659a287a59a6ccfa2e3fff42f84d94b542837acd30bc184d562de409060200162000859565b6000620009b78162001352565b6001600160a01b0316336001600160a01b031614620009ed5760405163f0a882b560e01b8152600481018290526024016200081f565b62000a0182670de0b6b3a764000062001976565b1562000a39576040517f0c6b0ec800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60078290556040518281527fdf7e6bc55eeb2668bd338e44a5abb721b1f98ad51f7a00baaa1b62f9383862d79060200162000859565b6000806003838154811062000a885762000a8862001ad9565b60009182526020909120600260049092020101546001600160a01b03169050801562000ab5578062000ac0565b62000ac08362001352565b9392505050565b6000806003838154811062000ae05762000ae062001ad9565b60009182526020909120600360049092020101546001600160a01b03169050801562000ab5578062000ac0565b6000600360008154811062000b265762000b2662001ad9565b906000526020600020906004020160030160149054906101000a900460ff16905090565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101919091526003828154811062000b8b5762000b8b62001ad9565b60009182526020918290206040805160a08101825260049390930290910180546001600160a01b03908116845260018201548116948401949094526002810154841691830191909152600301549182166060820152600160a01b90910460ff161515608082015292915050565b600062000c06600062000a6f565b905090565b60008262000c198162001352565b6001600160a01b0316336001600160a01b03161462000c4f5760405163f0a882b560e01b8152600481018290526024016200081f565b8360000362000c8a576040517f7244bc7800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000805260056020527f05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bc5460ff1615801562000cd5575060008481526005602052604090205460ff16155b1562000d0d576040517fbe61bb8700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002546040516000916001600160a01b03169062000d2b90620019c7565b6001600160a01b039091168152604060208201819052600090820152606001604051809103906000f08015801562000d67573d6000803e3d6000fd5b506040517fc4d66de80000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152919250829182169063c4d66de890602401600060405180830381600087803b15801562000dca57600080fd5b505af115801562000ddf573d6000803e3d6000fd5b505050506001600160a01b038181166000818152600460209081526040918290208a90559051928816835290917fa66df2ac9413442073c2e47b33e555f5891823df7841196bd1f197175a12f8ae910160405180910390a295945050505050565b600062000e4d8162001352565b6001600160a01b0316336001600160a01b03161462000e835760405163f0a882b560e01b8152600481018290526024016200081f565b600180546001600160a01b0319166001600160a01b0384169081179091556040519081527f18c973e70eca8db74eab2a3e0de3c4bffcc46c45f6f17f600e2d4d4f744e2a2b9060200162000859565b6001600160a01b038116600090815260046020526040812054620007b79062001352565b600380546040805160a0810182526000808252336020808401828152848601848152606086018581526080870186815260018a018b559986529551600489027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b810180546001600160a01b039384166001600160a01b03199182161790915593517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c8201805491841691861691909117905591517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d83018054918316919094161790925594517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85e909501805498511515600160a01b027fffffffffffffffffffffff0000000000000000000000000000000000000000009099169590911694909417969096179092559151908152909282917f645c9ae30d6a6aa6b2dace770fa0cfac2d8d44b9b036510e0a16aab39e6b5931910160405180910390a2919050565b6000620010858162001352565b6001600160a01b0316336001600160a01b031614620010bb5760405163f0a882b560e01b8152600481018290526024016200081f565b620010cf82670de0b6b3a764000062001976565b1562001107576040517fb4c4f79900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60088290556040518281527f1a35ca75fc5ab34ae3487b3507e7453b6e4c15a69f2392939fbbcf8f64558ad19060200162000859565b60006200114a8162001352565b6001600160a01b0316336001600160a01b031614620011805760405163f0a882b560e01b8152600481018290526024016200081f565b600080546001600160a01b0319166001600160a01b0384169081179091556040519081527fa0fe5cb0e8843811ca9f6123983dcdfd45a33b61892b9b8f380ed444078e299a9060200162000859565b6000620011dc8162001352565b6001600160a01b0316336001600160a01b031614620012125760405163f0a882b560e01b8152600481018290526024016200081f565b600280546001600160a01b0319166001600160a01b0384169081179091556040519081527f36466d973cc33c9b726f867d2fc1f8cd56d58de206993f62ccba543a3429ea629060200162000859565b600062000c06600062001352565b60006003828154811062001287576200128762001ad9565b6000918252602090912060049091020180549091506001600160a01b0316338114620012e3576040517f07f41a5f000000000000000000000000000000000000000000000000000000008152600481018490526024016200081f565b81546001600160a01b031990811683556001830180546001600160a01b03841692168217905560405190815283907f87c983c6a4d6d9a68e6d99934d1fb50f760858298c06f8ed6b316f534e06faf4906020015b60405180910390a2505050565b600062000c06600062000ac7565b6000600382815481106200136a576200136a62001ad9565b60009182526020909120600160049092020101546001600160a01b031692915050565b60006200139a8162001352565b6001600160a01b0316336001600160a01b031614620013d05760405163f0a882b560e01b8152600481018290526024016200081f565b600b8290556040518281527f7e6452dce5202ad16be30ea14955296f7157b95e4ca48b73fc54d54601185adf9060200162000859565b81620014128162001352565b6001600160a01b0316336001600160a01b031614620014485760405163f0a882b560e01b8152600481018290526024016200081f565b81600384815481106200145f576200145f62001ad9565b60009182526020918290206004919091020160030180546001600160a01b0319166001600160a01b03938416179055604051918416825284917f7be390d6034bf06d145f44a071a895ad3320f09c185598f74add0da31cada185910162001337565b81620014cd8162001352565b6001600160a01b0316336001600160a01b031614620015035760405163f0a882b560e01b8152600481018290526024016200081f565b81600384815481106200151a576200151a62001ad9565b60009182526020918290206004919091020180546001600160a01b0319166001600160a01b03938416179055604051918416825284917f0bffd4439c17923ee1b2b093be5394c42dcab0d9394e349a8d6a059c239ba603910162001337565b600180620015a57f5db5abc19987c2b3729df7961b62b6bb0bae886dd47e3ce25bb3a3af34c6d80b5490565b10620015e1576040517f1e7a9d95000000000000000000000000000000000000000000000000000000008152600481018290526024016200081f565b6200160b7f5db5abc19987c2b3729df7961b62b6bb0bae886dd47e3ce25bb3a3af34c6d80b829055565b60017fad57d7911b7e3d6c3c79a68ba909a7f4ba41f9485e5207b12dee0d0c6af5398c556200163962000ef6565b5062001645846200113d565b620016508362000e40565b6200165b82620011cf565b60007fad57d7911b7e3d6c3c79a68ba909a7f4ba41f9485e5207b12dee0d0c6af5398c5550505050565b81620016918162000ac7565b6001600160a01b0316336001600160a01b031614620016e0576040517feb94b522000000000000000000000000000000000000000000000000000000008152600481018290526024016200081f565b8160038481548110620016f757620016f762001ad9565b906000526020600020906004020160030160146101000a81548160ff021916908315150217905550827f8687fadd114273583c49dbd5c380ea8aada2a3f92db9fc9fba379906735633268360405162001337911515815260200190565b6000620017618162001352565b6001600160a01b0316336001600160a01b031614620017975760405163f0a882b560e01b8152600481018290526024016200081f565b620017ab82670de0b6b3a764000062001976565b15620017e3576040517f7c3ceda900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60098290556040518281527f852c049e335a49416ecbcb0128935cc3832c307d450d206f0a2d0bf2b28ba2db9060200162000859565b600062000c06600062000865565b6000620018348162001352565b6001600160a01b0316336001600160a01b0316146200186a5760405163f0a882b560e01b8152600481018290526024016200081f565b600083815260056020908152604091829020805460ff1916851515908117909155915191825284917faf22ec546747fecccb88b4e0bfdb870a12b89d281ab0167f74ed197b456903c2910162001337565b81620018c78162001352565b6001600160a01b0316336001600160a01b031614620018fd5760405163f0a882b560e01b8152600481018290526024016200081f565b816003848154811062001914576200191462001ad9565b60009182526020918290206004919091020160020180546001600160a01b0319166001600160a01b03938416179055604051918416825284917fffd31ccade46a73a57d8efd7d740bbf6aa67e50a158c98ad82a06ad31556cef4910162001337565b60006200198483836200198e565b6002149392505050565b6000828280821115620019a757600292505050620007b7565b80821015620019bc57600092505050620007b7565b506001949350505050565b6109a18062001b0983390190565b600060208284031215620019e857600080fd5b5035919050565b6001600160a01b038116811462001a0557600080fd5b50565b60006020828403121562001a1b57600080fd5b813562000ac081620019ef565b6000806040838503121562001a3c57600080fd5b82359150602083013562001a5081620019ef565b809150509250929050565b60008060006060848603121562001a7157600080fd5b833562001a7e81620019ef565b9250602084013562001a9081620019ef565b9150604084013562001aa281620019ef565b809150509250925092565b6000806040838503121562001ac157600080fd5b823591506020830135801515811462001a5057600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfe60806040526040516109a13803806109a18339810160408190526100229161048b565b61004d60017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5161054b565b60008051602061095a8339815191521461006957610069610570565b6100758282600061007c565b50506105f0565b61008583610147565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a26000825111806100c65750805b1561014257610140836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101309190610586565b836102d860201b6100291760201c565b505b505050565b61015a8161030460201b6100551760201c565b6101b95760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b61022d816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021e9190610586565b61030460201b6100551760201c565b6102925760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b60648201526084016101b0565b806102b760008051602061095a83398151915260001b61031360201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102fd838360405180606001604052806027815260200161097a60279139610316565b9392505050565b6001600160a01b03163b151590565b90565b60606001600160a01b0384163b61037e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101b0565b600080856001600160a01b03168560405161039991906105a1565b600060405180830381855af49150503d80600081146103d4576040519150601f19603f3d011682016040523d82523d6000602084013e6103d9565b606091505b5090925090506103ea8282866103f4565b9695505050505050565b606083156104035750816102fd565b8251156104135782518084602001fd5b8160405162461bcd60e51b81526004016101b091906105bd565b80516001600160a01b038116811461044457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561047a578181015183820152602001610462565b838111156101405750506000910152565b6000806040838503121561049e57600080fd5b6104a78361042d565b60208401519092506001600160401b03808211156104c457600080fd5b818501915085601f8301126104d857600080fd5b8151818111156104ea576104ea610449565b604051601f8201601f19908116603f0116810190838211818310171561051257610512610449565b8160405282815288602084870101111561052b57600080fd5b61053c83602083016020880161045f565b80955050505050509250929050565b60008282101561056b57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b60006020828403121561059857600080fd5b6102fd8261042d565b600082516105b381846020870161045f565b9190910192915050565b60208152600082518060208401526105dc81604085016020870161045f565b601f01601f19169190910160400192915050565b61035b806105ff6000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b610100565b565b606061004e83836040518060600160405280602781526020016102ff60279139610124565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fb9190610256565b905090565b3660008037600080366000845af43d6000803e80801561011f573d6000f35b3d6000fd5b60606001600160a01b0384163b6101a85760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e7472616374000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b600080856001600160a01b0316856040516101c391906102af565b600060405180830381855af49150503d80600081146101fe576040519150601f19603f3d011682016040523d82523d6000602084013e610203565b606091505b509150915061021382828661021d565b9695505050505050565b6060831561022c57508161004e565b82511561023c5782518084602001fd5b8160405162461bcd60e51b815260040161019f91906102cb565b60006020828403121561026857600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b8381101561029a578181015183820152602001610282565b838111156102a9576000848401525b50505050565b600082516102c181846020870161027f565b9190910192915050565b60208152600082518060208401526102ea81604085016020870161027f565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220c2cd8522e2d940840276495aefa7e527fd843d9e8d6ae46b5af07f6c1321a21664736f6c634300080d0033a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220a04865a334deed2c99c1cee236d179e04e7b74ce84f50edc0e99b9d2941d4f6a64736f6c634300080d0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "acceptCoordinatorOwner(uint256)": {
        "details": "Must be called by the coordinator's pending owner",
        "params": {
          "coordinatorId": "Coordinator to update"
        }
      },
      "coordinators(uint256)": {
        "params": {
          "coordinatorId": "Coordinator to return for"
        },
        "returns": {
          "_0": "Coordinator state"
        }
      },
      "createCoordinator()": {
        "details": "`treasury` and `pauser` initialize as the 0-address, defaulting to the `owner`",
        "returns": {
          "_0": "New coordinator ID"
        }
      },
      "createProduct(uint256,address)": {
        "details": "Coordinator caller must be allowed",
        "params": {
          "coordinatorId": "Coordinator that will own the product",
          "provider": "Provider that will service the market"
        },
        "returns": {
          "_0": "New product contract address"
        }
      },
      "initialize(address,address,address)": {
        "details": "Must be called atomically as part of the upgradeable proxy deployment to      avoid front-running",
        "params": {
          "collateral_": "Collateral contract address",
          "incentivizer_": "Incentivizer contract address",
          "productBeacon_": "Product implementation beacon address"
        }
      },
      "isProduct(address)": {
        "params": {
          "product": "Contract address to check"
        },
        "returns": {
          "_0": "Whether a contract is a product"
        }
      },
      "owner()": {
        "returns": {
          "_0": "Owner of the protocol"
        }
      },
      "owner(address)": {
        "params": {
          "product": "Product to return for"
        },
        "returns": {
          "_0": "Owner of the product"
        }
      },
      "owner(uint256)": {
        "params": {
          "coordinatorId": "Coordinator to return for"
        },
        "returns": {
          "_0": "Owner of the coordinator"
        }
      },
      "paused()": {
        "returns": {
          "_0": "Paused status of the protocol"
        }
      },
      "paused(address)": {
        "params": {
          "product": "Product to return for"
        },
        "returns": {
          "_0": "Paused status of the product"
        }
      },
      "paused(uint256)": {
        "params": {
          "coordinatorId": "Coordinator to return for"
        },
        "returns": {
          "_0": "Paused status of the coordinator"
        }
      },
      "pauser()": {
        "details": "Defaults to the `owner` when `pauser` is unset",
        "returns": {
          "_0": "Pauser of the protocol"
        }
      },
      "pauser(address)": {
        "details": "Defaults to the `owner` when `pauser` is unset",
        "params": {
          "product": "Product to return for"
        },
        "returns": {
          "_0": "Pauser of the product"
        }
      },
      "pauser(uint256)": {
        "details": "Defaults to the `owner` when `pauser` is unset",
        "params": {
          "coordinatorId": "Coordinator to return for"
        },
        "returns": {
          "_0": "Pauser of the coordinator"
        }
      },
      "pendingOwner()": {
        "returns": {
          "_0": "Owner of the protocol"
        }
      },
      "pendingOwner(uint256)": {
        "params": {
          "coordinatorId": "Coordinator to return for"
        },
        "returns": {
          "_0": "Pending owner of the coordinator"
        }
      },
      "treasury()": {
        "details": "Defaults to the `owner` when `treasury` is unset",
        "returns": {
          "_0": "Treasury of the protocol"
        }
      },
      "treasury(address)": {
        "details": "Defaults to the `owner` when `treasury` is unset",
        "params": {
          "product": "Product to return for"
        },
        "returns": {
          "_0": "Treasury of the product"
        }
      },
      "treasury(uint256)": {
        "details": "Defaults to the `owner` when `treasury` is unset",
        "params": {
          "coordinatorId": "Coordinator to return for"
        },
        "returns": {
          "_0": "Treasury of the coordinator"
        }
      },
      "updateAllowed(uint256,bool)": {
        "params": {
          "coordinatorId": "Coordinator to update",
          "newAllowed": "New allowed status for `coordinatorId`"
        }
      },
      "updateCollateral(address)": {
        "params": {
          "newCollateral": "New Collateral contract address"
        }
      },
      "updateCoordinatorPaused(uint256,bool)": {
        "details": "Must be called by the coordinator's current owner",
        "params": {
          "coordinatorId": "Coordinator to update",
          "newPaused": "New paused status"
        }
      },
      "updateCoordinatorPauser(uint256,address)": {
        "details": "Must be called by the coordinator's current owner",
        "params": {
          "coordinatorId": "Coordinator to update",
          "newPauser": "New pauser address"
        }
      },
      "updateCoordinatorPendingOwner(uint256,address)": {
        "details": "Must be called by the coordinator's current owner",
        "params": {
          "coordinatorId": "Coordinator to update",
          "newPendingOwner": "New pending owner address"
        }
      },
      "updateCoordinatorTreasury(uint256,address)": {
        "details": "Must be called by the coordinator's current owner",
        "params": {
          "coordinatorId": "Coordinator to update",
          "newTreasury": "New treasury address"
        }
      },
      "updateIncentivizationFee(uint256)": {
        "params": {
          "newIncentivizationFee": "New incentivization fee"
        }
      },
      "updateIncentivizer(address)": {
        "params": {
          "newIncentivizer": "New Incentivizer contract address"
        }
      },
      "updateLiquidationFee(uint256)": {
        "params": {
          "newLiquidationFee": "New liquidation fee"
        }
      },
      "updateMinCollateral(uint256)": {
        "params": {
          "newMinCollateral": "New minimum allowed collateral amount"
        }
      },
      "updateMinFundingFee(uint256)": {
        "params": {
          "newMinFundingFee": "New minimum allowed funding fee"
        }
      },
      "updateProductBeacon(address)": {
        "params": {
          "newProductBeacon": "New Product implementation beacon address"
        }
      },
      "updateProgramsPerProduct(uint256)": {
        "params": {
          "newProgramsPerProduct": "New maximum incentivization programs per product allowed"
        }
      },
      "updateProtocolFee(uint256)": {
        "params": {
          "newProtocolFee": "New protocol-product fee split"
        }
      }
    },
    "stateVariables": {
      "_coordinators": {
        "details": "List of product coordinators"
      },
      "allowed": {
        "details": "Whether a specific coordinator is allowed to create a new product"
      },
      "collateral": {
        "details": "Collateral contract address for the protocol"
      },
      "coordinatorFor": {
        "details": "Mapping of the coordinator for each  product"
      },
      "incentivizationFee": {
        "details": "Fee on incentivization programs"
      },
      "incentivizer": {
        "details": "Incentivizer contract address for the protocol"
      },
      "liquidationFee": {
        "details": "Fee on maintenance for liquidation"
      },
      "minCollateral": {
        "details": "Minimum allowable collateral amount per user account"
      },
      "minFundingFee": {
        "details": "Minimum allowable funding fee for a product"
      },
      "productBeacon": {
        "details": "Product implementation beacon address for the protocol"
      },
      "programsPerProduct": {
        "details": "Maximum incentivization programs per product allowed"
      },
      "protocolFee": {
        "details": "Percent of collected fees that go to the protocol treasury vs the product treasury"
      }
    },
    "title": "Controller",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "acceptCoordinatorOwner(uint256)": {
        "notice": "Accepts ownership over an existing coordinator"
      },
      "coordinators(uint256)": {
        "notice": "Returns coordinator state for coordinator `coordinatorId`"
      },
      "createCoordinator()": {
        "notice": "Creates a new coordinator with `msg.sender` as the owner"
      },
      "createProduct(uint256,address)": {
        "notice": "Creates a new product market with `provider`"
      },
      "initialize(address,address,address)": {
        "notice": "Initializes the contract state"
      },
      "isProduct(address)": {
        "notice": "Returns whether a contract is a product"
      },
      "owner()": {
        "notice": "Returns the owner of the protocol"
      },
      "owner(address)": {
        "notice": "Returns the owner of the product `product`"
      },
      "owner(uint256)": {
        "notice": "Returns the owner of the coordinator `coordinatorId`"
      },
      "paused()": {
        "notice": "Returns the paused status of the protocol"
      },
      "paused(address)": {
        "notice": "Returns the paused status of the product `product`"
      },
      "paused(uint256)": {
        "notice": "Returns the paused status of the coordinator `coordinatorId`"
      },
      "pauser()": {
        "notice": "Returns the pauser of the protocol"
      },
      "pauser(address)": {
        "notice": "Returns the pauser of the product `product`"
      },
      "pauser(uint256)": {
        "notice": "Returns the pauser of the coordinator `coordinatorId`"
      },
      "pendingOwner()": {
        "notice": "Returns the pending owner of the protocol"
      },
      "pendingOwner(uint256)": {
        "notice": "Returns the pending owner of the coordinator `coordinatorId`"
      },
      "treasury()": {
        "notice": "Returns the treasury of the protocol"
      },
      "treasury(address)": {
        "notice": "Returns the treasury of the product `product`"
      },
      "treasury(uint256)": {
        "notice": "Returns the treasury of the coordinator `coordinatorId`"
      },
      "updateAllowed(uint256,bool)": {
        "notice": "Updates whether `coordinatorId` is allowed to create new products"
      },
      "updateCollateral(address)": {
        "notice": "Updates the Collateral contract address"
      },
      "updateCoordinatorPaused(uint256,bool)": {
        "notice": "Updates the paused status of an existing coordinator"
      },
      "updateCoordinatorPauser(uint256,address)": {
        "notice": "Updates the pauser of an existing coordinator"
      },
      "updateCoordinatorPendingOwner(uint256,address)": {
        "notice": "Updates the pending owner of an existing coordinator"
      },
      "updateCoordinatorTreasury(uint256,address)": {
        "notice": "Updates the treasury of an existing coordinator"
      },
      "updateIncentivizationFee(uint256)": {
        "notice": "Updates the incentivization fee"
      },
      "updateIncentivizer(address)": {
        "notice": "Updates the Incentivizer contract address"
      },
      "updateLiquidationFee(uint256)": {
        "notice": "Updates the liquidation fee"
      },
      "updateMinCollateral(uint256)": {
        "notice": "Updates the minimum allowed collateral amount per user account"
      },
      "updateMinFundingFee(uint256)": {
        "notice": "Updates the minimum allowed funding fee"
      },
      "updateProductBeacon(address)": {
        "notice": "Updates the Product implementation beacon address"
      },
      "updateProgramsPerProduct(uint256)": {
        "notice": "Updates the maximum incentivization programs per product allowed"
      },
      "updateProtocolFee(uint256)": {
        "notice": "Updates the protocol-product fee split"
      }
    },
    "notice": "Manages creating new products and global protocol parameters.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 9918,
        "contract": "contracts/controller/Controller.sol:Controller",
        "label": "collateral",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(ICollateral)12734"
      },
      {
        "astId": 9922,
        "contract": "contracts/controller/Controller.sol:Controller",
        "label": "incentivizer",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IIncentivizer)13401"
      },
      {
        "astId": 9926,
        "contract": "contracts/controller/Controller.sol:Controller",
        "label": "productBeacon",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IBeacon)5862"
      },
      {
        "astId": 9931,
        "contract": "contracts/controller/Controller.sol:Controller",
        "label": "_coordinators",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_struct(Coordinator)12758_storage)dyn_storage"
      },
      {
        "astId": 9937,
        "contract": "contracts/controller/Controller.sol:Controller",
        "label": "coordinatorFor",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_contract(IProduct)13640,t_uint256)"
      },
      {
        "astId": 9942,
        "contract": "contracts/controller/Controller.sol:Controller",
        "label": "allowed",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_bool)"
      },
      {
        "astId": 9946,
        "contract": "contracts/controller/Controller.sol:Controller",
        "label": "protocolFee",
        "offset": 0,
        "slot": "6",
        "type": "t_userDefinedValueType(UFixed18)1887"
      },
      {
        "astId": 9950,
        "contract": "contracts/controller/Controller.sol:Controller",
        "label": "minFundingFee",
        "offset": 0,
        "slot": "7",
        "type": "t_userDefinedValueType(UFixed18)1887"
      },
      {
        "astId": 9954,
        "contract": "contracts/controller/Controller.sol:Controller",
        "label": "liquidationFee",
        "offset": 0,
        "slot": "8",
        "type": "t_userDefinedValueType(UFixed18)1887"
      },
      {
        "astId": 9958,
        "contract": "contracts/controller/Controller.sol:Controller",
        "label": "incentivizationFee",
        "offset": 0,
        "slot": "9",
        "type": "t_userDefinedValueType(UFixed18)1887"
      },
      {
        "astId": 9962,
        "contract": "contracts/controller/Controller.sol:Controller",
        "label": "minCollateral",
        "offset": 0,
        "slot": "10",
        "type": "t_userDefinedValueType(UFixed18)1887"
      },
      {
        "astId": 9965,
        "contract": "contracts/controller/Controller.sol:Controller",
        "label": "programsPerProduct",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Coordinator)12758_storage)dyn_storage": {
        "base": "t_struct(Coordinator)12758_storage",
        "encoding": "dynamic_array",
        "label": "struct IController.Coordinator[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IBeacon)5862": {
        "encoding": "inplace",
        "label": "contract IBeacon",
        "numberOfBytes": "20"
      },
      "t_contract(ICollateral)12734": {
        "encoding": "inplace",
        "label": "contract ICollateral",
        "numberOfBytes": "20"
      },
      "t_contract(IIncentivizer)13401": {
        "encoding": "inplace",
        "label": "contract IIncentivizer",
        "numberOfBytes": "20"
      },
      "t_contract(IProduct)13640": {
        "encoding": "inplace",
        "label": "contract IProduct",
        "numberOfBytes": "20"
      },
      "t_mapping(t_contract(IProduct)13640,t_uint256)": {
        "encoding": "mapping",
        "key": "t_contract(IProduct)13640",
        "label": "mapping(contract IProduct => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_struct(Coordinator)12758_storage": {
        "encoding": "inplace",
        "label": "struct IController.Coordinator",
        "members": [
          {
            "astId": 12745,
            "contract": "contracts/controller/Controller.sol:Controller",
            "label": "pendingOwner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 12748,
            "contract": "contracts/controller/Controller.sol:Controller",
            "label": "owner",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 12751,
            "contract": "contracts/controller/Controller.sol:Controller",
            "label": "treasury",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 12754,
            "contract": "contracts/controller/Controller.sol:Controller",
            "label": "pauser",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 12757,
            "contract": "contracts/controller/Controller.sol:Controller",
            "label": "paused",
            "offset": 20,
            "slot": "3",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_userDefinedValueType(UFixed18)1887": {
        "encoding": "inplace",
        "label": "UFixed18",
        "numberOfBytes": "32"
      }
    }
  }
}
